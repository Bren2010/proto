//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: message_contents/contact.proto

package org.xmtp.proto.message.contents;

@kotlin.jvm.JvmName("-initializecontactBundleV2")
public inline fun contactBundleV2(block: org.xmtp.proto.message.contents.ContactBundleV2Kt.Dsl.() -> kotlin.Unit): org.xmtp.proto.message.contents.Contact.ContactBundleV2 =
  org.xmtp.proto.message.contents.ContactBundleV2Kt.Dsl._create(org.xmtp.proto.message.contents.Contact.ContactBundleV2.newBuilder()).apply { block() }._build()
public object ContactBundleV2Kt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.xmtp.proto.message.contents.Contact.ContactBundleV2.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.xmtp.proto.message.contents.Contact.ContactBundleV2.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.xmtp.proto.message.contents.Contact.ContactBundleV2 = _builder.build()

    /**
     * <code>.xmtp.message_contents.SignedPublicKeyBundle key_bundle = 1;</code>
     */
    public var keyBundle: org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle
      @JvmName("getKeyBundle")
      get() = _builder.getKeyBundle()
      @JvmName("setKeyBundle")
      set(value) {
        _builder.setKeyBundle(value)
      }
    /**
     * <code>.xmtp.message_contents.SignedPublicKeyBundle key_bundle = 1;</code>
     */
    public fun clearKeyBundle() {
      _builder.clearKeyBundle()
    }
    /**
     * <code>.xmtp.message_contents.SignedPublicKeyBundle key_bundle = 1;</code>
     * @return Whether the keyBundle field is set.
     */
    public fun hasKeyBundle(): kotlin.Boolean {
      return _builder.hasKeyBundle()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.xmtp.proto.message.contents.Contact.ContactBundleV2.copy(block: org.xmtp.proto.message.contents.ContactBundleV2Kt.Dsl.() -> kotlin.Unit): org.xmtp.proto.message.contents.Contact.ContactBundleV2 =
  org.xmtp.proto.message.contents.ContactBundleV2Kt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.xmtp.proto.message.contents.Contact.ContactBundleV2OrBuilder.keyBundleOrNull: org.xmtp.proto.message.contents.PublicKeyOuterClass.SignedPublicKeyBundle?
  get() = if (hasKeyBundle()) getKeyBundle() else null

