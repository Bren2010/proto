//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: message_api/v1/authn.proto

package org.xmtp.proto.message.api.v1;

@kotlin.jvm.JvmName("-initializetoken")
public inline fun token(block: org.xmtp.proto.message.api.v1.TokenKt.Dsl.() -> kotlin.Unit): org.xmtp.proto.message.api.v1.Authn.Token =
  org.xmtp.proto.message.api.v1.TokenKt.Dsl._create(org.xmtp.proto.message.api.v1.Authn.Token.newBuilder()).apply { block() }._build()
public object TokenKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.xmtp.proto.message.api.v1.Authn.Token.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.xmtp.proto.message.api.v1.Authn.Token.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.xmtp.proto.message.api.v1.Authn.Token = _builder.build()

    /**
     * <pre>
     * identity key signed by a wallet
     * </pre>
     *
     * <code>.xmtp.message_contents.PublicKey identity_key = 1;</code>
     */
    public var identityKey: org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKey
      @JvmName("getIdentityKey")
      get() = _builder.getIdentityKey()
      @JvmName("setIdentityKey")
      set(value) {
        _builder.setIdentityKey(value)
      }
    /**
     * <pre>
     * identity key signed by a wallet
     * </pre>
     *
     * <code>.xmtp.message_contents.PublicKey identity_key = 1;</code>
     */
    public fun clearIdentityKey() {
      _builder.clearIdentityKey()
    }
    /**
     * <pre>
     * identity key signed by a wallet
     * </pre>
     *
     * <code>.xmtp.message_contents.PublicKey identity_key = 1;</code>
     * @return Whether the identityKey field is set.
     */
    public fun hasIdentityKey(): kotlin.Boolean {
      return _builder.hasIdentityKey()
    }

    /**
     * <pre>
     * encoded bytes of AuthData
     * </pre>
     *
     * <code>bytes auth_data_bytes = 2;</code>
     */
    public var authDataBytes: com.google.protobuf.ByteString
      @JvmName("getAuthDataBytes")
      get() = _builder.getAuthDataBytes()
      @JvmName("setAuthDataBytes")
      set(value) {
        _builder.setAuthDataBytes(value)
      }
    /**
     * <pre>
     * encoded bytes of AuthData
     * </pre>
     *
     * <code>bytes auth_data_bytes = 2;</code>
     */
    public fun clearAuthDataBytes() {
      _builder.clearAuthDataBytes()
    }

    /**
     * <pre>
     * identity key signature of AuthData bytes
     * </pre>
     *
     * <code>.xmtp.message_contents.Signature auth_data_signature = 3;</code>
     */
    public var authDataSignature: org.xmtp.proto.message.contents.SignatureOuterClass.Signature
      @JvmName("getAuthDataSignature")
      get() = _builder.getAuthDataSignature()
      @JvmName("setAuthDataSignature")
      set(value) {
        _builder.setAuthDataSignature(value)
      }
    /**
     * <pre>
     * identity key signature of AuthData bytes
     * </pre>
     *
     * <code>.xmtp.message_contents.Signature auth_data_signature = 3;</code>
     */
    public fun clearAuthDataSignature() {
      _builder.clearAuthDataSignature()
    }
    /**
     * <pre>
     * identity key signature of AuthData bytes
     * </pre>
     *
     * <code>.xmtp.message_contents.Signature auth_data_signature = 3;</code>
     * @return Whether the authDataSignature field is set.
     */
    public fun hasAuthDataSignature(): kotlin.Boolean {
      return _builder.hasAuthDataSignature()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.xmtp.proto.message.api.v1.Authn.Token.copy(block: org.xmtp.proto.message.api.v1.TokenKt.Dsl.() -> kotlin.Unit): org.xmtp.proto.message.api.v1.Authn.Token =
  org.xmtp.proto.message.api.v1.TokenKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.xmtp.proto.message.api.v1.Authn.TokenOrBuilder.identityKeyOrNull: org.xmtp.proto.message.contents.PublicKeyOuterClass.PublicKey?
  get() = if (hasIdentityKey()) getIdentityKey() else null

public val org.xmtp.proto.message.api.v1.Authn.TokenOrBuilder.authDataSignatureOrNull: org.xmtp.proto.message.contents.SignatureOuterClass.Signature?
  get() = if (hasAuthDataSignature()) getAuthDataSignature() else null

