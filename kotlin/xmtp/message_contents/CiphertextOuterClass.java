// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_contents/ciphertext.proto

package xmtp.message_contents;

public final class CiphertextOuterClass {
  private CiphertextOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CiphertextOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xmtp.message_contents.Ciphertext)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256 aes256_gcm_hkdf_sha256 = 1;</code>
     * @return Whether the aes256GcmHkdfSha256 field is set.
     */
    boolean hasAes256GcmHkdfSha256();
    /**
     * <code>.xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256 aes256_gcm_hkdf_sha256 = 1;</code>
     * @return The aes256GcmHkdfSha256.
     */
    xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 getAes256GcmHkdfSha256();
    /**
     * <code>.xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256 aes256_gcm_hkdf_sha256 = 1;</code>
     */
    xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256OrBuilder getAes256GcmHkdfSha256OrBuilder();

    public xmtp.message_contents.CiphertextOuterClass.Ciphertext.UnionCase getUnionCase();
  }
  /**
   * <pre>
   * Ciphertext represents encrypted payload.
   * It is definited as a union to support cryptographic algorithm agility.
   * The payload is accompanied by the cryptographic parameters
   * required by the chosen encryption scheme.
   * </pre>
   *
   * Protobuf type {@code xmtp.message_contents.Ciphertext}
   */
  public static final class Ciphertext extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xmtp.message_contents.Ciphertext)
      CiphertextOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Ciphertext.newBuilder() to construct.
    private Ciphertext(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Ciphertext() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Ciphertext();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Ciphertext(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.Builder subBuilder = null;
              if (unionCase_ == 1) {
                subBuilder = ((xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256) union_).toBuilder();
              }
              union_ =
                  input.readMessage(xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256) union_);
                union_ = subBuilder.buildPartial();
              }
              unionCase_ = 1;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xmtp.message_contents.CiphertextOuterClass.internal_static_xmtp_message_contents_Ciphertext_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xmtp.message_contents.CiphertextOuterClass.internal_static_xmtp_message_contents_Ciphertext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xmtp.message_contents.CiphertextOuterClass.Ciphertext.class, xmtp.message_contents.CiphertextOuterClass.Ciphertext.Builder.class);
    }

    public interface Aes256gcmHkdfsha256OrBuilder extends
        // @@protoc_insertion_point(interface_extends:xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * 32 bytes
       * </pre>
       *
       * <code>bytes hkdf_salt = 1;</code>
       * @return The hkdfSalt.
       */
      com.google.protobuf.ByteString getHkdfSalt();

      /**
       * <pre>
       * 12 bytes
       * </pre>
       *
       * <code>bytes gcm_nonce = 2;</code>
       * @return The gcmNonce.
       */
      com.google.protobuf.ByteString getGcmNonce();

      /**
       * <pre>
       * encrypted payload
       * </pre>
       *
       * <code>bytes payload = 3;</code>
       * @return The payload.
       */
      com.google.protobuf.ByteString getPayload();
    }
    /**
     * <pre>
     * Encryption: AES256-GCM
     * Key derivation function: HKDF-SHA256
     * </pre>
     *
     * Protobuf type {@code xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256}
     */
    public static final class Aes256gcmHkdfsha256 extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256)
        Aes256gcmHkdfsha256OrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Aes256gcmHkdfsha256.newBuilder() to construct.
      private Aes256gcmHkdfsha256(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Aes256gcmHkdfsha256() {
        hkdfSalt_ = com.google.protobuf.ByteString.EMPTY;
        gcmNonce_ = com.google.protobuf.ByteString.EMPTY;
        payload_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Aes256gcmHkdfsha256();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Aes256gcmHkdfsha256(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {

                hkdfSalt_ = input.readBytes();
                break;
              }
              case 18: {

                gcmNonce_ = input.readBytes();
                break;
              }
              case 26: {

                payload_ = input.readBytes();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xmtp.message_contents.CiphertextOuterClass.internal_static_xmtp_message_contents_Ciphertext_Aes256gcmHkdfsha256_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xmtp.message_contents.CiphertextOuterClass.internal_static_xmtp_message_contents_Ciphertext_Aes256gcmHkdfsha256_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.class, xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.Builder.class);
      }

      public static final int HKDF_SALT_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString hkdfSalt_;
      /**
       * <pre>
       * 32 bytes
       * </pre>
       *
       * <code>bytes hkdf_salt = 1;</code>
       * @return The hkdfSalt.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getHkdfSalt() {
        return hkdfSalt_;
      }

      public static final int GCM_NONCE_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString gcmNonce_;
      /**
       * <pre>
       * 12 bytes
       * </pre>
       *
       * <code>bytes gcm_nonce = 2;</code>
       * @return The gcmNonce.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getGcmNonce() {
        return gcmNonce_;
      }

      public static final int PAYLOAD_FIELD_NUMBER = 3;
      private com.google.protobuf.ByteString payload_;
      /**
       * <pre>
       * encrypted payload
       * </pre>
       *
       * <code>bytes payload = 3;</code>
       * @return The payload.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!hkdfSalt_.isEmpty()) {
          output.writeBytes(1, hkdfSalt_);
        }
        if (!gcmNonce_.isEmpty()) {
          output.writeBytes(2, gcmNonce_);
        }
        if (!payload_.isEmpty()) {
          output.writeBytes(3, payload_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!hkdfSalt_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, hkdfSalt_);
        }
        if (!gcmNonce_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, gcmNonce_);
        }
        if (!payload_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, payload_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256)) {
          return super.equals(obj);
        }
        xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 other = (xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256) obj;

        if (!getHkdfSalt()
            .equals(other.getHkdfSalt())) return false;
        if (!getGcmNonce()
            .equals(other.getGcmNonce())) return false;
        if (!getPayload()
            .equals(other.getPayload())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + HKDF_SALT_FIELD_NUMBER;
        hash = (53 * hash) + getHkdfSalt().hashCode();
        hash = (37 * hash) + GCM_NONCE_FIELD_NUMBER;
        hash = (53 * hash) + getGcmNonce().hashCode();
        hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
        hash = (53 * hash) + getPayload().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Encryption: AES256-GCM
       * Key derivation function: HKDF-SHA256
       * </pre>
       *
       * Protobuf type {@code xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256)
          xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256OrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return xmtp.message_contents.CiphertextOuterClass.internal_static_xmtp_message_contents_Ciphertext_Aes256gcmHkdfsha256_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return xmtp.message_contents.CiphertextOuterClass.internal_static_xmtp_message_contents_Ciphertext_Aes256gcmHkdfsha256_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.class, xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.Builder.class);
        }

        // Construct using xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          hkdfSalt_ = com.google.protobuf.ByteString.EMPTY;

          gcmNonce_ = com.google.protobuf.ByteString.EMPTY;

          payload_ = com.google.protobuf.ByteString.EMPTY;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return xmtp.message_contents.CiphertextOuterClass.internal_static_xmtp_message_contents_Ciphertext_Aes256gcmHkdfsha256_descriptor;
        }

        @java.lang.Override
        public xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 getDefaultInstanceForType() {
          return xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.getDefaultInstance();
        }

        @java.lang.Override
        public xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 build() {
          xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 buildPartial() {
          xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 result = new xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256(this);
          result.hkdfSalt_ = hkdfSalt_;
          result.gcmNonce_ = gcmNonce_;
          result.payload_ = payload_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256) {
            return mergeFrom((xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 other) {
          if (other == xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.getDefaultInstance()) return this;
          if (other.getHkdfSalt() != com.google.protobuf.ByteString.EMPTY) {
            setHkdfSalt(other.getHkdfSalt());
          }
          if (other.getGcmNonce() != com.google.protobuf.ByteString.EMPTY) {
            setGcmNonce(other.getGcmNonce());
          }
          if (other.getPayload() != com.google.protobuf.ByteString.EMPTY) {
            setPayload(other.getPayload());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.google.protobuf.ByteString hkdfSalt_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         * 32 bytes
         * </pre>
         *
         * <code>bytes hkdf_salt = 1;</code>
         * @return The hkdfSalt.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getHkdfSalt() {
          return hkdfSalt_;
        }
        /**
         * <pre>
         * 32 bytes
         * </pre>
         *
         * <code>bytes hkdf_salt = 1;</code>
         * @param value The hkdfSalt to set.
         * @return This builder for chaining.
         */
        public Builder setHkdfSalt(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          hkdfSalt_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * 32 bytes
         * </pre>
         *
         * <code>bytes hkdf_salt = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearHkdfSalt() {
          
          hkdfSalt_ = getDefaultInstance().getHkdfSalt();
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString gcmNonce_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         * 12 bytes
         * </pre>
         *
         * <code>bytes gcm_nonce = 2;</code>
         * @return The gcmNonce.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getGcmNonce() {
          return gcmNonce_;
        }
        /**
         * <pre>
         * 12 bytes
         * </pre>
         *
         * <code>bytes gcm_nonce = 2;</code>
         * @param value The gcmNonce to set.
         * @return This builder for chaining.
         */
        public Builder setGcmNonce(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          gcmNonce_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * 12 bytes
         * </pre>
         *
         * <code>bytes gcm_nonce = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearGcmNonce() {
          
          gcmNonce_ = getDefaultInstance().getGcmNonce();
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         * encrypted payload
         * </pre>
         *
         * <code>bytes payload = 3;</code>
         * @return The payload.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getPayload() {
          return payload_;
        }
        /**
         * <pre>
         * encrypted payload
         * </pre>
         *
         * <code>bytes payload = 3;</code>
         * @param value The payload to set.
         * @return This builder for chaining.
         */
        public Builder setPayload(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          payload_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * encrypted payload
         * </pre>
         *
         * <code>bytes payload = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearPayload() {
          
          payload_ = getDefaultInstance().getPayload();
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256)
      }

      // @@protoc_insertion_point(class_scope:xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256)
      private static final xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256();
      }

      public static xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Aes256gcmHkdfsha256>
          PARSER = new com.google.protobuf.AbstractParser<Aes256gcmHkdfsha256>() {
        @java.lang.Override
        public Aes256gcmHkdfsha256 parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Aes256gcmHkdfsha256(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Aes256gcmHkdfsha256> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Aes256gcmHkdfsha256> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int unionCase_ = 0;
    private java.lang.Object union_;
    public enum UnionCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      AES256_GCM_HKDF_SHA256(1),
      UNION_NOT_SET(0);
      private final int value;
      private UnionCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static UnionCase valueOf(int value) {
        return forNumber(value);
      }

      public static UnionCase forNumber(int value) {
        switch (value) {
          case 1: return AES256_GCM_HKDF_SHA256;
          case 0: return UNION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public UnionCase
    getUnionCase() {
      return UnionCase.forNumber(
          unionCase_);
    }

    public static final int AES256_GCM_HKDF_SHA256_FIELD_NUMBER = 1;
    /**
     * <code>.xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256 aes256_gcm_hkdf_sha256 = 1;</code>
     * @return Whether the aes256GcmHkdfSha256 field is set.
     */
    @java.lang.Override
    public boolean hasAes256GcmHkdfSha256() {
      return unionCase_ == 1;
    }
    /**
     * <code>.xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256 aes256_gcm_hkdf_sha256 = 1;</code>
     * @return The aes256GcmHkdfSha256.
     */
    @java.lang.Override
    public xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 getAes256GcmHkdfSha256() {
      if (unionCase_ == 1) {
         return (xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256) union_;
      }
      return xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.getDefaultInstance();
    }
    /**
     * <code>.xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256 aes256_gcm_hkdf_sha256 = 1;</code>
     */
    @java.lang.Override
    public xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256OrBuilder getAes256GcmHkdfSha256OrBuilder() {
      if (unionCase_ == 1) {
         return (xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256) union_;
      }
      return xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (unionCase_ == 1) {
        output.writeMessage(1, (xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256) union_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (unionCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256) union_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xmtp.message_contents.CiphertextOuterClass.Ciphertext)) {
        return super.equals(obj);
      }
      xmtp.message_contents.CiphertextOuterClass.Ciphertext other = (xmtp.message_contents.CiphertextOuterClass.Ciphertext) obj;

      if (!getUnionCase().equals(other.getUnionCase())) return false;
      switch (unionCase_) {
        case 1:
          if (!getAes256GcmHkdfSha256()
              .equals(other.getAes256GcmHkdfSha256())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (unionCase_) {
        case 1:
          hash = (37 * hash) + AES256_GCM_HKDF_SHA256_FIELD_NUMBER;
          hash = (53 * hash) + getAes256GcmHkdfSha256().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xmtp.message_contents.CiphertextOuterClass.Ciphertext parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xmtp.message_contents.CiphertextOuterClass.Ciphertext parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xmtp.message_contents.CiphertextOuterClass.Ciphertext parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xmtp.message_contents.CiphertextOuterClass.Ciphertext parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xmtp.message_contents.CiphertextOuterClass.Ciphertext parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xmtp.message_contents.CiphertextOuterClass.Ciphertext parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xmtp.message_contents.CiphertextOuterClass.Ciphertext parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xmtp.message_contents.CiphertextOuterClass.Ciphertext parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xmtp.message_contents.CiphertextOuterClass.Ciphertext parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xmtp.message_contents.CiphertextOuterClass.Ciphertext parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xmtp.message_contents.CiphertextOuterClass.Ciphertext parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xmtp.message_contents.CiphertextOuterClass.Ciphertext parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xmtp.message_contents.CiphertextOuterClass.Ciphertext prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Ciphertext represents encrypted payload.
     * It is definited as a union to support cryptographic algorithm agility.
     * The payload is accompanied by the cryptographic parameters
     * required by the chosen encryption scheme.
     * </pre>
     *
     * Protobuf type {@code xmtp.message_contents.Ciphertext}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xmtp.message_contents.Ciphertext)
        xmtp.message_contents.CiphertextOuterClass.CiphertextOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xmtp.message_contents.CiphertextOuterClass.internal_static_xmtp_message_contents_Ciphertext_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xmtp.message_contents.CiphertextOuterClass.internal_static_xmtp_message_contents_Ciphertext_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xmtp.message_contents.CiphertextOuterClass.Ciphertext.class, xmtp.message_contents.CiphertextOuterClass.Ciphertext.Builder.class);
      }

      // Construct using xmtp.message_contents.CiphertextOuterClass.Ciphertext.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        unionCase_ = 0;
        union_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xmtp.message_contents.CiphertextOuterClass.internal_static_xmtp_message_contents_Ciphertext_descriptor;
      }

      @java.lang.Override
      public xmtp.message_contents.CiphertextOuterClass.Ciphertext getDefaultInstanceForType() {
        return xmtp.message_contents.CiphertextOuterClass.Ciphertext.getDefaultInstance();
      }

      @java.lang.Override
      public xmtp.message_contents.CiphertextOuterClass.Ciphertext build() {
        xmtp.message_contents.CiphertextOuterClass.Ciphertext result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xmtp.message_contents.CiphertextOuterClass.Ciphertext buildPartial() {
        xmtp.message_contents.CiphertextOuterClass.Ciphertext result = new xmtp.message_contents.CiphertextOuterClass.Ciphertext(this);
        if (unionCase_ == 1) {
          if (aes256GcmHkdfSha256Builder_ == null) {
            result.union_ = union_;
          } else {
            result.union_ = aes256GcmHkdfSha256Builder_.build();
          }
        }
        result.unionCase_ = unionCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xmtp.message_contents.CiphertextOuterClass.Ciphertext) {
          return mergeFrom((xmtp.message_contents.CiphertextOuterClass.Ciphertext)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xmtp.message_contents.CiphertextOuterClass.Ciphertext other) {
        if (other == xmtp.message_contents.CiphertextOuterClass.Ciphertext.getDefaultInstance()) return this;
        switch (other.getUnionCase()) {
          case AES256_GCM_HKDF_SHA256: {
            mergeAes256GcmHkdfSha256(other.getAes256GcmHkdfSha256());
            break;
          }
          case UNION_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        xmtp.message_contents.CiphertextOuterClass.Ciphertext parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (xmtp.message_contents.CiphertextOuterClass.Ciphertext) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int unionCase_ = 0;
      private java.lang.Object union_;
      public UnionCase
          getUnionCase() {
        return UnionCase.forNumber(
            unionCase_);
      }

      public Builder clearUnion() {
        unionCase_ = 0;
        union_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256, xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.Builder, xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256OrBuilder> aes256GcmHkdfSha256Builder_;
      /**
       * <code>.xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256 aes256_gcm_hkdf_sha256 = 1;</code>
       * @return Whether the aes256GcmHkdfSha256 field is set.
       */
      @java.lang.Override
      public boolean hasAes256GcmHkdfSha256() {
        return unionCase_ == 1;
      }
      /**
       * <code>.xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256 aes256_gcm_hkdf_sha256 = 1;</code>
       * @return The aes256GcmHkdfSha256.
       */
      @java.lang.Override
      public xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 getAes256GcmHkdfSha256() {
        if (aes256GcmHkdfSha256Builder_ == null) {
          if (unionCase_ == 1) {
            return (xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256) union_;
          }
          return xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.getDefaultInstance();
        } else {
          if (unionCase_ == 1) {
            return aes256GcmHkdfSha256Builder_.getMessage();
          }
          return xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.getDefaultInstance();
        }
      }
      /**
       * <code>.xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256 aes256_gcm_hkdf_sha256 = 1;</code>
       */
      public Builder setAes256GcmHkdfSha256(xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 value) {
        if (aes256GcmHkdfSha256Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          union_ = value;
          onChanged();
        } else {
          aes256GcmHkdfSha256Builder_.setMessage(value);
        }
        unionCase_ = 1;
        return this;
      }
      /**
       * <code>.xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256 aes256_gcm_hkdf_sha256 = 1;</code>
       */
      public Builder setAes256GcmHkdfSha256(
          xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.Builder builderForValue) {
        if (aes256GcmHkdfSha256Builder_ == null) {
          union_ = builderForValue.build();
          onChanged();
        } else {
          aes256GcmHkdfSha256Builder_.setMessage(builderForValue.build());
        }
        unionCase_ = 1;
        return this;
      }
      /**
       * <code>.xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256 aes256_gcm_hkdf_sha256 = 1;</code>
       */
      public Builder mergeAes256GcmHkdfSha256(xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256 value) {
        if (aes256GcmHkdfSha256Builder_ == null) {
          if (unionCase_ == 1 &&
              union_ != xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.getDefaultInstance()) {
            union_ = xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.newBuilder((xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256) union_)
                .mergeFrom(value).buildPartial();
          } else {
            union_ = value;
          }
          onChanged();
        } else {
          if (unionCase_ == 1) {
            aes256GcmHkdfSha256Builder_.mergeFrom(value);
          }
          aes256GcmHkdfSha256Builder_.setMessage(value);
        }
        unionCase_ = 1;
        return this;
      }
      /**
       * <code>.xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256 aes256_gcm_hkdf_sha256 = 1;</code>
       */
      public Builder clearAes256GcmHkdfSha256() {
        if (aes256GcmHkdfSha256Builder_ == null) {
          if (unionCase_ == 1) {
            unionCase_ = 0;
            union_ = null;
            onChanged();
          }
        } else {
          if (unionCase_ == 1) {
            unionCase_ = 0;
            union_ = null;
          }
          aes256GcmHkdfSha256Builder_.clear();
        }
        return this;
      }
      /**
       * <code>.xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256 aes256_gcm_hkdf_sha256 = 1;</code>
       */
      public xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.Builder getAes256GcmHkdfSha256Builder() {
        return getAes256GcmHkdfSha256FieldBuilder().getBuilder();
      }
      /**
       * <code>.xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256 aes256_gcm_hkdf_sha256 = 1;</code>
       */
      @java.lang.Override
      public xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256OrBuilder getAes256GcmHkdfSha256OrBuilder() {
        if ((unionCase_ == 1) && (aes256GcmHkdfSha256Builder_ != null)) {
          return aes256GcmHkdfSha256Builder_.getMessageOrBuilder();
        } else {
          if (unionCase_ == 1) {
            return (xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256) union_;
          }
          return xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.getDefaultInstance();
        }
      }
      /**
       * <code>.xmtp.message_contents.Ciphertext.Aes256gcmHkdfsha256 aes256_gcm_hkdf_sha256 = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256, xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.Builder, xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256OrBuilder> 
          getAes256GcmHkdfSha256FieldBuilder() {
        if (aes256GcmHkdfSha256Builder_ == null) {
          if (!(unionCase_ == 1)) {
            union_ = xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.getDefaultInstance();
          }
          aes256GcmHkdfSha256Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256, xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256.Builder, xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256OrBuilder>(
                  (xmtp.message_contents.CiphertextOuterClass.Ciphertext.Aes256gcmHkdfsha256) union_,
                  getParentForChildren(),
                  isClean());
          union_ = null;
        }
        unionCase_ = 1;
        onChanged();;
        return aes256GcmHkdfSha256Builder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xmtp.message_contents.Ciphertext)
    }

    // @@protoc_insertion_point(class_scope:xmtp.message_contents.Ciphertext)
    private static final xmtp.message_contents.CiphertextOuterClass.Ciphertext DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xmtp.message_contents.CiphertextOuterClass.Ciphertext();
    }

    public static xmtp.message_contents.CiphertextOuterClass.Ciphertext getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Ciphertext>
        PARSER = new com.google.protobuf.AbstractParser<Ciphertext>() {
      @java.lang.Override
      public Ciphertext parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Ciphertext(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Ciphertext> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Ciphertext> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xmtp.message_contents.CiphertextOuterClass.Ciphertext getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xmtp_message_contents_Ciphertext_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xmtp_message_contents_Ciphertext_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xmtp_message_contents_Ciphertext_Aes256gcmHkdfsha256_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xmtp_message_contents_Ciphertext_Aes256gcmHkdfsha256_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!message_contents/ciphertext.proto\022\025xmt" +
      "p.message_contents\"\274\001\n\nCiphertext\022W\n\026aes" +
      "256_gcm_hkdf_sha256\030\001 \001(\01325.xmtp.message" +
      "_contents.Ciphertext.Aes256gcmHkdfsha256" +
      "H\000\032L\n\023Aes256gcmHkdfsha256\022\021\n\thkdf_salt\030\001" +
      " \001(\014\022\021\n\tgcm_nonce\030\002 \001(\014\022\017\n\007payload\030\003 \001(\014" +
      "B\007\n\005unionB.Z,github.com/xmtp/proto/v3/go" +
      "/message_contentsb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_xmtp_message_contents_Ciphertext_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_xmtp_message_contents_Ciphertext_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xmtp_message_contents_Ciphertext_descriptor,
        new java.lang.String[] { "Aes256GcmHkdfSha256", "Union", });
    internal_static_xmtp_message_contents_Ciphertext_Aes256gcmHkdfsha256_descriptor =
      internal_static_xmtp_message_contents_Ciphertext_descriptor.getNestedTypes().get(0);
    internal_static_xmtp_message_contents_Ciphertext_Aes256gcmHkdfsha256_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xmtp_message_contents_Ciphertext_Aes256gcmHkdfsha256_descriptor,
        new java.lang.String[] { "HkdfSalt", "GcmNonce", "Payload", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
