// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_contents/public_key.proto

package xmtp.message_contents;

public final class PublicKeyOuterClass {
  private PublicKeyOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface UnsignedPublicKeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xmtp.message_contents.UnsignedPublicKey)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 created_ns = 1;</code>
     * @return The createdNs.
     */
    long getCreatedNs();

    /**
     * <code>.xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
     * @return Whether the secp256k1Uncompressed field is set.
     */
    boolean hasSecp256K1Uncompressed();
    /**
     * <code>.xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
     * @return The secp256k1Uncompressed.
     */
    xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed getSecp256K1Uncompressed();
    /**
     * <code>.xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
     */
    xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1UncompressedOrBuilder getSecp256K1UncompressedOrBuilder();

    public xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.UnionCase getUnionCase();
  }
  /**
   * <pre>
   * UnsignedPublicKey represents a generalized public key,
   * defined as a union to support cryptographic algorithm agility.
   * </pre>
   *
   * Protobuf type {@code xmtp.message_contents.UnsignedPublicKey}
   */
  public static final class UnsignedPublicKey extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xmtp.message_contents.UnsignedPublicKey)
      UnsignedPublicKeyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UnsignedPublicKey.newBuilder() to construct.
    private UnsignedPublicKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UnsignedPublicKey() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UnsignedPublicKey();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UnsignedPublicKey(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              createdNs_ = input.readUInt64();
              break;
            }
            case 26: {
              xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.Builder subBuilder = null;
              if (unionCase_ == 3) {
                subBuilder = ((xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed) union_).toBuilder();
              }
              union_ =
                  input.readMessage(xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed) union_);
                union_ = subBuilder.buildPartial();
              }
              unionCase_ = 3;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_UnsignedPublicKey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_UnsignedPublicKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.class, xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Builder.class);
    }

    public interface Secp256k1UncompressedOrBuilder extends
        // @@protoc_insertion_point(interface_extends:xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * uncompressed point with prefix (0x04) [ P || X || Y ], 65 bytes
       * </pre>
       *
       * <code>bytes bytes = 1;</code>
       * @return The bytes.
       */
      com.google.protobuf.ByteString getBytes();
    }
    /**
     * <pre>
     * EC: SECP256k1
     * </pre>
     *
     * Protobuf type {@code xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed}
     */
    public static final class Secp256k1Uncompressed extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed)
        Secp256k1UncompressedOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Secp256k1Uncompressed.newBuilder() to construct.
      private Secp256k1Uncompressed(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Secp256k1Uncompressed() {
        bytes_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Secp256k1Uncompressed();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Secp256k1Uncompressed(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {

                bytes_ = input.readBytes();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_UnsignedPublicKey_Secp256k1Uncompressed_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_UnsignedPublicKey_Secp256k1Uncompressed_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.class, xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.Builder.class);
      }

      public static final int BYTES_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString bytes_;
      /**
       * <pre>
       * uncompressed point with prefix (0x04) [ P || X || Y ], 65 bytes
       * </pre>
       *
       * <code>bytes bytes = 1;</code>
       * @return The bytes.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBytes() {
        return bytes_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!bytes_.isEmpty()) {
          output.writeBytes(1, bytes_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!bytes_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, bytes_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed)) {
          return super.equals(obj);
        }
        xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed other = (xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed) obj;

        if (!getBytes()
            .equals(other.getBytes())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + BYTES_FIELD_NUMBER;
        hash = (53 * hash) + getBytes().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * EC: SECP256k1
       * </pre>
       *
       * Protobuf type {@code xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed)
          xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1UncompressedOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_UnsignedPublicKey_Secp256k1Uncompressed_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_UnsignedPublicKey_Secp256k1Uncompressed_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.class, xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.Builder.class);
        }

        // Construct using xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bytes_ = com.google.protobuf.ByteString.EMPTY;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_UnsignedPublicKey_Secp256k1Uncompressed_descriptor;
        }

        @java.lang.Override
        public xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed getDefaultInstanceForType() {
          return xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.getDefaultInstance();
        }

        @java.lang.Override
        public xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed build() {
          xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed buildPartial() {
          xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed result = new xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed(this);
          result.bytes_ = bytes_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed) {
            return mergeFrom((xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed other) {
          if (other == xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.getDefaultInstance()) return this;
          if (other.getBytes() != com.google.protobuf.ByteString.EMPTY) {
            setBytes(other.getBytes());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.google.protobuf.ByteString bytes_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         * uncompressed point with prefix (0x04) [ P || X || Y ], 65 bytes
         * </pre>
         *
         * <code>bytes bytes = 1;</code>
         * @return The bytes.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getBytes() {
          return bytes_;
        }
        /**
         * <pre>
         * uncompressed point with prefix (0x04) [ P || X || Y ], 65 bytes
         * </pre>
         *
         * <code>bytes bytes = 1;</code>
         * @param value The bytes to set.
         * @return This builder for chaining.
         */
        public Builder setBytes(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          bytes_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * uncompressed point with prefix (0x04) [ P || X || Y ], 65 bytes
         * </pre>
         *
         * <code>bytes bytes = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearBytes() {
          
          bytes_ = getDefaultInstance().getBytes();
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed)
      }

      // @@protoc_insertion_point(class_scope:xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed)
      private static final xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed();
      }

      public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Secp256k1Uncompressed>
          PARSER = new com.google.protobuf.AbstractParser<Secp256k1Uncompressed>() {
        @java.lang.Override
        public Secp256k1Uncompressed parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Secp256k1Uncompressed(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Secp256k1Uncompressed> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Secp256k1Uncompressed> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int unionCase_ = 0;
    private java.lang.Object union_;
    public enum UnionCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      SECP256K1_UNCOMPRESSED(3),
      UNION_NOT_SET(0);
      private final int value;
      private UnionCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static UnionCase valueOf(int value) {
        return forNumber(value);
      }

      public static UnionCase forNumber(int value) {
        switch (value) {
          case 3: return SECP256K1_UNCOMPRESSED;
          case 0: return UNION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public UnionCase
    getUnionCase() {
      return UnionCase.forNumber(
          unionCase_);
    }

    public static final int CREATED_NS_FIELD_NUMBER = 1;
    private long createdNs_;
    /**
     * <code>uint64 created_ns = 1;</code>
     * @return The createdNs.
     */
    @java.lang.Override
    public long getCreatedNs() {
      return createdNs_;
    }

    public static final int SECP256K1_UNCOMPRESSED_FIELD_NUMBER = 3;
    /**
     * <code>.xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
     * @return Whether the secp256k1Uncompressed field is set.
     */
    @java.lang.Override
    public boolean hasSecp256K1Uncompressed() {
      return unionCase_ == 3;
    }
    /**
     * <code>.xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
     * @return The secp256k1Uncompressed.
     */
    @java.lang.Override
    public xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed getSecp256K1Uncompressed() {
      if (unionCase_ == 3) {
         return (xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed) union_;
      }
      return xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.getDefaultInstance();
    }
    /**
     * <code>.xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
     */
    @java.lang.Override
    public xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1UncompressedOrBuilder getSecp256K1UncompressedOrBuilder() {
      if (unionCase_ == 3) {
         return (xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed) union_;
      }
      return xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (createdNs_ != 0L) {
        output.writeUInt64(1, createdNs_);
      }
      if (unionCase_ == 3) {
        output.writeMessage(3, (xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed) union_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (createdNs_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, createdNs_);
      }
      if (unionCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed) union_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey)) {
        return super.equals(obj);
      }
      xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey other = (xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey) obj;

      if (getCreatedNs()
          != other.getCreatedNs()) return false;
      if (!getUnionCase().equals(other.getUnionCase())) return false;
      switch (unionCase_) {
        case 3:
          if (!getSecp256K1Uncompressed()
              .equals(other.getSecp256K1Uncompressed())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CREATED_NS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCreatedNs());
      switch (unionCase_) {
        case 3:
          hash = (37 * hash) + SECP256K1_UNCOMPRESSED_FIELD_NUMBER;
          hash = (53 * hash) + getSecp256K1Uncompressed().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * UnsignedPublicKey represents a generalized public key,
     * defined as a union to support cryptographic algorithm agility.
     * </pre>
     *
     * Protobuf type {@code xmtp.message_contents.UnsignedPublicKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xmtp.message_contents.UnsignedPublicKey)
        xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_UnsignedPublicKey_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_UnsignedPublicKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.class, xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Builder.class);
      }

      // Construct using xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        createdNs_ = 0L;

        unionCase_ = 0;
        union_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_UnsignedPublicKey_descriptor;
      }

      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey getDefaultInstanceForType() {
        return xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.getDefaultInstance();
      }

      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey build() {
        xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey buildPartial() {
        xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey result = new xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey(this);
        result.createdNs_ = createdNs_;
        if (unionCase_ == 3) {
          if (secp256K1UncompressedBuilder_ == null) {
            result.union_ = union_;
          } else {
            result.union_ = secp256K1UncompressedBuilder_.build();
          }
        }
        result.unionCase_ = unionCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey) {
          return mergeFrom((xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey other) {
        if (other == xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.getDefaultInstance()) return this;
        if (other.getCreatedNs() != 0L) {
          setCreatedNs(other.getCreatedNs());
        }
        switch (other.getUnionCase()) {
          case SECP256K1_UNCOMPRESSED: {
            mergeSecp256K1Uncompressed(other.getSecp256K1Uncompressed());
            break;
          }
          case UNION_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int unionCase_ = 0;
      private java.lang.Object union_;
      public UnionCase
          getUnionCase() {
        return UnionCase.forNumber(
            unionCase_);
      }

      public Builder clearUnion() {
        unionCase_ = 0;
        union_ = null;
        onChanged();
        return this;
      }


      private long createdNs_ ;
      /**
       * <code>uint64 created_ns = 1;</code>
       * @return The createdNs.
       */
      @java.lang.Override
      public long getCreatedNs() {
        return createdNs_;
      }
      /**
       * <code>uint64 created_ns = 1;</code>
       * @param value The createdNs to set.
       * @return This builder for chaining.
       */
      public Builder setCreatedNs(long value) {
        
        createdNs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 created_ns = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCreatedNs() {
        
        createdNs_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed, xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.Builder, xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1UncompressedOrBuilder> secp256K1UncompressedBuilder_;
      /**
       * <code>.xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
       * @return Whether the secp256k1Uncompressed field is set.
       */
      @java.lang.Override
      public boolean hasSecp256K1Uncompressed() {
        return unionCase_ == 3;
      }
      /**
       * <code>.xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
       * @return The secp256k1Uncompressed.
       */
      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed getSecp256K1Uncompressed() {
        if (secp256K1UncompressedBuilder_ == null) {
          if (unionCase_ == 3) {
            return (xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed) union_;
          }
          return xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.getDefaultInstance();
        } else {
          if (unionCase_ == 3) {
            return secp256K1UncompressedBuilder_.getMessage();
          }
          return xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.getDefaultInstance();
        }
      }
      /**
       * <code>.xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
       */
      public Builder setSecp256K1Uncompressed(xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed value) {
        if (secp256K1UncompressedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          union_ = value;
          onChanged();
        } else {
          secp256K1UncompressedBuilder_.setMessage(value);
        }
        unionCase_ = 3;
        return this;
      }
      /**
       * <code>.xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
       */
      public Builder setSecp256K1Uncompressed(
          xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.Builder builderForValue) {
        if (secp256K1UncompressedBuilder_ == null) {
          union_ = builderForValue.build();
          onChanged();
        } else {
          secp256K1UncompressedBuilder_.setMessage(builderForValue.build());
        }
        unionCase_ = 3;
        return this;
      }
      /**
       * <code>.xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
       */
      public Builder mergeSecp256K1Uncompressed(xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed value) {
        if (secp256K1UncompressedBuilder_ == null) {
          if (unionCase_ == 3 &&
              union_ != xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.getDefaultInstance()) {
            union_ = xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.newBuilder((xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed) union_)
                .mergeFrom(value).buildPartial();
          } else {
            union_ = value;
          }
          onChanged();
        } else {
          if (unionCase_ == 3) {
            secp256K1UncompressedBuilder_.mergeFrom(value);
          }
          secp256K1UncompressedBuilder_.setMessage(value);
        }
        unionCase_ = 3;
        return this;
      }
      /**
       * <code>.xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
       */
      public Builder clearSecp256K1Uncompressed() {
        if (secp256K1UncompressedBuilder_ == null) {
          if (unionCase_ == 3) {
            unionCase_ = 0;
            union_ = null;
            onChanged();
          }
        } else {
          if (unionCase_ == 3) {
            unionCase_ = 0;
            union_ = null;
          }
          secp256K1UncompressedBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
       */
      public xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.Builder getSecp256K1UncompressedBuilder() {
        return getSecp256K1UncompressedFieldBuilder().getBuilder();
      }
      /**
       * <code>.xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
       */
      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1UncompressedOrBuilder getSecp256K1UncompressedOrBuilder() {
        if ((unionCase_ == 3) && (secp256K1UncompressedBuilder_ != null)) {
          return secp256K1UncompressedBuilder_.getMessageOrBuilder();
        } else {
          if (unionCase_ == 3) {
            return (xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed) union_;
          }
          return xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.getDefaultInstance();
        }
      }
      /**
       * <code>.xmtp.message_contents.UnsignedPublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed, xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.Builder, xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1UncompressedOrBuilder> 
          getSecp256K1UncompressedFieldBuilder() {
        if (secp256K1UncompressedBuilder_ == null) {
          if (!(unionCase_ == 3)) {
            union_ = xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.getDefaultInstance();
          }
          secp256K1UncompressedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed, xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed.Builder, xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1UncompressedOrBuilder>(
                  (xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey.Secp256k1Uncompressed) union_,
                  getParentForChildren(),
                  isClean());
          union_ = null;
        }
        unionCase_ = 3;
        onChanged();;
        return secp256K1UncompressedBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xmtp.message_contents.UnsignedPublicKey)
    }

    // @@protoc_insertion_point(class_scope:xmtp.message_contents.UnsignedPublicKey)
    private static final xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey();
    }

    public static xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UnsignedPublicKey>
        PARSER = new com.google.protobuf.AbstractParser<UnsignedPublicKey>() {
      @java.lang.Override
      public UnsignedPublicKey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnsignedPublicKey(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UnsignedPublicKey> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UnsignedPublicKey> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xmtp.message_contents.PublicKeyOuterClass.UnsignedPublicKey getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignedPublicKeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xmtp.message_contents.SignedPublicKey)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * embeds an UnsignedPublicKey
     * </pre>
     *
     * <code>bytes key_bytes = 1;</code>
     * @return The keyBytes.
     */
    com.google.protobuf.ByteString getKeyBytes();

    /**
     * <pre>
     * signs key_bytes
     * </pre>
     *
     * <code>.xmtp.message_contents.Signature signature = 2;</code>
     * @return Whether the signature field is set.
     */
    boolean hasSignature();
    /**
     * <pre>
     * signs key_bytes
     * </pre>
     *
     * <code>.xmtp.message_contents.Signature signature = 2;</code>
     * @return The signature.
     */
    xmtp.message_contents.SignatureOuterClass.Signature getSignature();
    /**
     * <pre>
     * signs key_bytes
     * </pre>
     *
     * <code>.xmtp.message_contents.Signature signature = 2;</code>
     */
    xmtp.message_contents.SignatureOuterClass.SignatureOrBuilder getSignatureOrBuilder();
  }
  /**
   * <pre>
   * SignedPublicKey 
   * </pre>
   *
   * Protobuf type {@code xmtp.message_contents.SignedPublicKey}
   */
  public static final class SignedPublicKey extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xmtp.message_contents.SignedPublicKey)
      SignedPublicKeyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignedPublicKey.newBuilder() to construct.
    private SignedPublicKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignedPublicKey() {
      keyBytes_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignedPublicKey();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignedPublicKey(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              keyBytes_ = input.readBytes();
              break;
            }
            case 18: {
              xmtp.message_contents.SignatureOuterClass.Signature.Builder subBuilder = null;
              if (signature_ != null) {
                subBuilder = signature_.toBuilder();
              }
              signature_ = input.readMessage(xmtp.message_contents.SignatureOuterClass.Signature.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signature_);
                signature_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_SignedPublicKey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_SignedPublicKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.class, xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.Builder.class);
    }

    public static final int KEY_BYTES_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString keyBytes_;
    /**
     * <pre>
     * embeds an UnsignedPublicKey
     * </pre>
     *
     * <code>bytes key_bytes = 1;</code>
     * @return The keyBytes.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getKeyBytes() {
      return keyBytes_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 2;
    private xmtp.message_contents.SignatureOuterClass.Signature signature_;
    /**
     * <pre>
     * signs key_bytes
     * </pre>
     *
     * <code>.xmtp.message_contents.Signature signature = 2;</code>
     * @return Whether the signature field is set.
     */
    @java.lang.Override
    public boolean hasSignature() {
      return signature_ != null;
    }
    /**
     * <pre>
     * signs key_bytes
     * </pre>
     *
     * <code>.xmtp.message_contents.Signature signature = 2;</code>
     * @return The signature.
     */
    @java.lang.Override
    public xmtp.message_contents.SignatureOuterClass.Signature getSignature() {
      return signature_ == null ? xmtp.message_contents.SignatureOuterClass.Signature.getDefaultInstance() : signature_;
    }
    /**
     * <pre>
     * signs key_bytes
     * </pre>
     *
     * <code>.xmtp.message_contents.Signature signature = 2;</code>
     */
    @java.lang.Override
    public xmtp.message_contents.SignatureOuterClass.SignatureOrBuilder getSignatureOrBuilder() {
      return getSignature();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!keyBytes_.isEmpty()) {
        output.writeBytes(1, keyBytes_);
      }
      if (signature_ != null) {
        output.writeMessage(2, getSignature());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!keyBytes_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, keyBytes_);
      }
      if (signature_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSignature());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey)) {
        return super.equals(obj);
      }
      xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey other = (xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey) obj;

      if (!getKeyBytes()
          .equals(other.getKeyBytes())) return false;
      if (hasSignature() != other.hasSignature()) return false;
      if (hasSignature()) {
        if (!getSignature()
            .equals(other.getSignature())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + getKeyBytes().hashCode();
      if (hasSignature()) {
        hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
        hash = (53 * hash) + getSignature().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * SignedPublicKey 
     * </pre>
     *
     * Protobuf type {@code xmtp.message_contents.SignedPublicKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xmtp.message_contents.SignedPublicKey)
        xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_SignedPublicKey_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_SignedPublicKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.class, xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.Builder.class);
      }

      // Construct using xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        keyBytes_ = com.google.protobuf.ByteString.EMPTY;

        if (signatureBuilder_ == null) {
          signature_ = null;
        } else {
          signature_ = null;
          signatureBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_SignedPublicKey_descriptor;
      }

      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey getDefaultInstanceForType() {
        return xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.getDefaultInstance();
      }

      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey build() {
        xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey buildPartial() {
        xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey result = new xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey(this);
        result.keyBytes_ = keyBytes_;
        if (signatureBuilder_ == null) {
          result.signature_ = signature_;
        } else {
          result.signature_ = signatureBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey) {
          return mergeFrom((xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey other) {
        if (other == xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.getDefaultInstance()) return this;
        if (other.getKeyBytes() != com.google.protobuf.ByteString.EMPTY) {
          setKeyBytes(other.getKeyBytes());
        }
        if (other.hasSignature()) {
          mergeSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString keyBytes_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * embeds an UnsignedPublicKey
       * </pre>
       *
       * <code>bytes key_bytes = 1;</code>
       * @return The keyBytes.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getKeyBytes() {
        return keyBytes_;
      }
      /**
       * <pre>
       * embeds an UnsignedPublicKey
       * </pre>
       *
       * <code>bytes key_bytes = 1;</code>
       * @param value The keyBytes to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        keyBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * embeds an UnsignedPublicKey
       * </pre>
       *
       * <code>bytes key_bytes = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyBytes() {
        
        keyBytes_ = getDefaultInstance().getKeyBytes();
        onChanged();
        return this;
      }

      private xmtp.message_contents.SignatureOuterClass.Signature signature_;
      private com.google.protobuf.SingleFieldBuilderV3<
          xmtp.message_contents.SignatureOuterClass.Signature, xmtp.message_contents.SignatureOuterClass.Signature.Builder, xmtp.message_contents.SignatureOuterClass.SignatureOrBuilder> signatureBuilder_;
      /**
       * <pre>
       * signs key_bytes
       * </pre>
       *
       * <code>.xmtp.message_contents.Signature signature = 2;</code>
       * @return Whether the signature field is set.
       */
      public boolean hasSignature() {
        return signatureBuilder_ != null || signature_ != null;
      }
      /**
       * <pre>
       * signs key_bytes
       * </pre>
       *
       * <code>.xmtp.message_contents.Signature signature = 2;</code>
       * @return The signature.
       */
      public xmtp.message_contents.SignatureOuterClass.Signature getSignature() {
        if (signatureBuilder_ == null) {
          return signature_ == null ? xmtp.message_contents.SignatureOuterClass.Signature.getDefaultInstance() : signature_;
        } else {
          return signatureBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * signs key_bytes
       * </pre>
       *
       * <code>.xmtp.message_contents.Signature signature = 2;</code>
       */
      public Builder setSignature(xmtp.message_contents.SignatureOuterClass.Signature value) {
        if (signatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signature_ = value;
          onChanged();
        } else {
          signatureBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * signs key_bytes
       * </pre>
       *
       * <code>.xmtp.message_contents.Signature signature = 2;</code>
       */
      public Builder setSignature(
          xmtp.message_contents.SignatureOuterClass.Signature.Builder builderForValue) {
        if (signatureBuilder_ == null) {
          signature_ = builderForValue.build();
          onChanged();
        } else {
          signatureBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * signs key_bytes
       * </pre>
       *
       * <code>.xmtp.message_contents.Signature signature = 2;</code>
       */
      public Builder mergeSignature(xmtp.message_contents.SignatureOuterClass.Signature value) {
        if (signatureBuilder_ == null) {
          if (signature_ != null) {
            signature_ =
              xmtp.message_contents.SignatureOuterClass.Signature.newBuilder(signature_).mergeFrom(value).buildPartial();
          } else {
            signature_ = value;
          }
          onChanged();
        } else {
          signatureBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * signs key_bytes
       * </pre>
       *
       * <code>.xmtp.message_contents.Signature signature = 2;</code>
       */
      public Builder clearSignature() {
        if (signatureBuilder_ == null) {
          signature_ = null;
          onChanged();
        } else {
          signature_ = null;
          signatureBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * signs key_bytes
       * </pre>
       *
       * <code>.xmtp.message_contents.Signature signature = 2;</code>
       */
      public xmtp.message_contents.SignatureOuterClass.Signature.Builder getSignatureBuilder() {
        
        onChanged();
        return getSignatureFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * signs key_bytes
       * </pre>
       *
       * <code>.xmtp.message_contents.Signature signature = 2;</code>
       */
      public xmtp.message_contents.SignatureOuterClass.SignatureOrBuilder getSignatureOrBuilder() {
        if (signatureBuilder_ != null) {
          return signatureBuilder_.getMessageOrBuilder();
        } else {
          return signature_ == null ?
              xmtp.message_contents.SignatureOuterClass.Signature.getDefaultInstance() : signature_;
        }
      }
      /**
       * <pre>
       * signs key_bytes
       * </pre>
       *
       * <code>.xmtp.message_contents.Signature signature = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xmtp.message_contents.SignatureOuterClass.Signature, xmtp.message_contents.SignatureOuterClass.Signature.Builder, xmtp.message_contents.SignatureOuterClass.SignatureOrBuilder> 
          getSignatureFieldBuilder() {
        if (signatureBuilder_ == null) {
          signatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xmtp.message_contents.SignatureOuterClass.Signature, xmtp.message_contents.SignatureOuterClass.Signature.Builder, xmtp.message_contents.SignatureOuterClass.SignatureOrBuilder>(
                  getSignature(),
                  getParentForChildren(),
                  isClean());
          signature_ = null;
        }
        return signatureBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xmtp.message_contents.SignedPublicKey)
    }

    // @@protoc_insertion_point(class_scope:xmtp.message_contents.SignedPublicKey)
    private static final xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey();
    }

    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignedPublicKey>
        PARSER = new com.google.protobuf.AbstractParser<SignedPublicKey>() {
      @java.lang.Override
      public SignedPublicKey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignedPublicKey(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignedPublicKey> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignedPublicKey> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignedPublicKeyBundleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xmtp.message_contents.SignedPublicKeyBundle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Identity key MUST be signed by the wallet.
     * </pre>
     *
     * <code>.xmtp.message_contents.SignedPublicKey identity_key = 1;</code>
     * @return Whether the identityKey field is set.
     */
    boolean hasIdentityKey();
    /**
     * <pre>
     * Identity key MUST be signed by the wallet.
     * </pre>
     *
     * <code>.xmtp.message_contents.SignedPublicKey identity_key = 1;</code>
     * @return The identityKey.
     */
    xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey getIdentityKey();
    /**
     * <pre>
     * Identity key MUST be signed by the wallet.
     * </pre>
     *
     * <code>.xmtp.message_contents.SignedPublicKey identity_key = 1;</code>
     */
    xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyOrBuilder getIdentityKeyOrBuilder();

    /**
     * <pre>
     * Pre-key MUST be signed by the identity key.
     * </pre>
     *
     * <code>.xmtp.message_contents.SignedPublicKey pre_key = 2;</code>
     * @return Whether the preKey field is set.
     */
    boolean hasPreKey();
    /**
     * <pre>
     * Pre-key MUST be signed by the identity key.
     * </pre>
     *
     * <code>.xmtp.message_contents.SignedPublicKey pre_key = 2;</code>
     * @return The preKey.
     */
    xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey getPreKey();
    /**
     * <pre>
     * Pre-key MUST be signed by the identity key.
     * </pre>
     *
     * <code>.xmtp.message_contents.SignedPublicKey pre_key = 2;</code>
     */
    xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyOrBuilder getPreKeyOrBuilder();
  }
  /**
   * <pre>
   * PublicKeyBundle packages the cryptographic keys associated with a wallet.
   * </pre>
   *
   * Protobuf type {@code xmtp.message_contents.SignedPublicKeyBundle}
   */
  public static final class SignedPublicKeyBundle extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xmtp.message_contents.SignedPublicKeyBundle)
      SignedPublicKeyBundleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignedPublicKeyBundle.newBuilder() to construct.
    private SignedPublicKeyBundle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignedPublicKeyBundle() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignedPublicKeyBundle();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignedPublicKeyBundle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.Builder subBuilder = null;
              if (identityKey_ != null) {
                subBuilder = identityKey_.toBuilder();
              }
              identityKey_ = input.readMessage(xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(identityKey_);
                identityKey_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.Builder subBuilder = null;
              if (preKey_ != null) {
                subBuilder = preKey_.toBuilder();
              }
              preKey_ = input.readMessage(xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(preKey_);
                preKey_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_SignedPublicKeyBundle_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_SignedPublicKeyBundle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle.class, xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle.Builder.class);
    }

    public static final int IDENTITY_KEY_FIELD_NUMBER = 1;
    private xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey identityKey_;
    /**
     * <pre>
     * Identity key MUST be signed by the wallet.
     * </pre>
     *
     * <code>.xmtp.message_contents.SignedPublicKey identity_key = 1;</code>
     * @return Whether the identityKey field is set.
     */
    @java.lang.Override
    public boolean hasIdentityKey() {
      return identityKey_ != null;
    }
    /**
     * <pre>
     * Identity key MUST be signed by the wallet.
     * </pre>
     *
     * <code>.xmtp.message_contents.SignedPublicKey identity_key = 1;</code>
     * @return The identityKey.
     */
    @java.lang.Override
    public xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey getIdentityKey() {
      return identityKey_ == null ? xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.getDefaultInstance() : identityKey_;
    }
    /**
     * <pre>
     * Identity key MUST be signed by the wallet.
     * </pre>
     *
     * <code>.xmtp.message_contents.SignedPublicKey identity_key = 1;</code>
     */
    @java.lang.Override
    public xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyOrBuilder getIdentityKeyOrBuilder() {
      return getIdentityKey();
    }

    public static final int PRE_KEY_FIELD_NUMBER = 2;
    private xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey preKey_;
    /**
     * <pre>
     * Pre-key MUST be signed by the identity key.
     * </pre>
     *
     * <code>.xmtp.message_contents.SignedPublicKey pre_key = 2;</code>
     * @return Whether the preKey field is set.
     */
    @java.lang.Override
    public boolean hasPreKey() {
      return preKey_ != null;
    }
    /**
     * <pre>
     * Pre-key MUST be signed by the identity key.
     * </pre>
     *
     * <code>.xmtp.message_contents.SignedPublicKey pre_key = 2;</code>
     * @return The preKey.
     */
    @java.lang.Override
    public xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey getPreKey() {
      return preKey_ == null ? xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.getDefaultInstance() : preKey_;
    }
    /**
     * <pre>
     * Pre-key MUST be signed by the identity key.
     * </pre>
     *
     * <code>.xmtp.message_contents.SignedPublicKey pre_key = 2;</code>
     */
    @java.lang.Override
    public xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyOrBuilder getPreKeyOrBuilder() {
      return getPreKey();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (identityKey_ != null) {
        output.writeMessage(1, getIdentityKey());
      }
      if (preKey_ != null) {
        output.writeMessage(2, getPreKey());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (identityKey_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getIdentityKey());
      }
      if (preKey_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPreKey());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle)) {
        return super.equals(obj);
      }
      xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle other = (xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle) obj;

      if (hasIdentityKey() != other.hasIdentityKey()) return false;
      if (hasIdentityKey()) {
        if (!getIdentityKey()
            .equals(other.getIdentityKey())) return false;
      }
      if (hasPreKey() != other.hasPreKey()) return false;
      if (hasPreKey()) {
        if (!getPreKey()
            .equals(other.getPreKey())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIdentityKey()) {
        hash = (37 * hash) + IDENTITY_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getIdentityKey().hashCode();
      }
      if (hasPreKey()) {
        hash = (37 * hash) + PRE_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPreKey().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PublicKeyBundle packages the cryptographic keys associated with a wallet.
     * </pre>
     *
     * Protobuf type {@code xmtp.message_contents.SignedPublicKeyBundle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xmtp.message_contents.SignedPublicKeyBundle)
        xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_SignedPublicKeyBundle_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_SignedPublicKeyBundle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle.class, xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle.Builder.class);
      }

      // Construct using xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (identityKeyBuilder_ == null) {
          identityKey_ = null;
        } else {
          identityKey_ = null;
          identityKeyBuilder_ = null;
        }
        if (preKeyBuilder_ == null) {
          preKey_ = null;
        } else {
          preKey_ = null;
          preKeyBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_SignedPublicKeyBundle_descriptor;
      }

      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle getDefaultInstanceForType() {
        return xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle.getDefaultInstance();
      }

      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle build() {
        xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle buildPartial() {
        xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle result = new xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle(this);
        if (identityKeyBuilder_ == null) {
          result.identityKey_ = identityKey_;
        } else {
          result.identityKey_ = identityKeyBuilder_.build();
        }
        if (preKeyBuilder_ == null) {
          result.preKey_ = preKey_;
        } else {
          result.preKey_ = preKeyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle) {
          return mergeFrom((xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle other) {
        if (other == xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle.getDefaultInstance()) return this;
        if (other.hasIdentityKey()) {
          mergeIdentityKey(other.getIdentityKey());
        }
        if (other.hasPreKey()) {
          mergePreKey(other.getPreKey());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey identityKey_;
      private com.google.protobuf.SingleFieldBuilderV3<
          xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey, xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.Builder, xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyOrBuilder> identityKeyBuilder_;
      /**
       * <pre>
       * Identity key MUST be signed by the wallet.
       * </pre>
       *
       * <code>.xmtp.message_contents.SignedPublicKey identity_key = 1;</code>
       * @return Whether the identityKey field is set.
       */
      public boolean hasIdentityKey() {
        return identityKeyBuilder_ != null || identityKey_ != null;
      }
      /**
       * <pre>
       * Identity key MUST be signed by the wallet.
       * </pre>
       *
       * <code>.xmtp.message_contents.SignedPublicKey identity_key = 1;</code>
       * @return The identityKey.
       */
      public xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey getIdentityKey() {
        if (identityKeyBuilder_ == null) {
          return identityKey_ == null ? xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.getDefaultInstance() : identityKey_;
        } else {
          return identityKeyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Identity key MUST be signed by the wallet.
       * </pre>
       *
       * <code>.xmtp.message_contents.SignedPublicKey identity_key = 1;</code>
       */
      public Builder setIdentityKey(xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey value) {
        if (identityKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          identityKey_ = value;
          onChanged();
        } else {
          identityKeyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Identity key MUST be signed by the wallet.
       * </pre>
       *
       * <code>.xmtp.message_contents.SignedPublicKey identity_key = 1;</code>
       */
      public Builder setIdentityKey(
          xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.Builder builderForValue) {
        if (identityKeyBuilder_ == null) {
          identityKey_ = builderForValue.build();
          onChanged();
        } else {
          identityKeyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Identity key MUST be signed by the wallet.
       * </pre>
       *
       * <code>.xmtp.message_contents.SignedPublicKey identity_key = 1;</code>
       */
      public Builder mergeIdentityKey(xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey value) {
        if (identityKeyBuilder_ == null) {
          if (identityKey_ != null) {
            identityKey_ =
              xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.newBuilder(identityKey_).mergeFrom(value).buildPartial();
          } else {
            identityKey_ = value;
          }
          onChanged();
        } else {
          identityKeyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Identity key MUST be signed by the wallet.
       * </pre>
       *
       * <code>.xmtp.message_contents.SignedPublicKey identity_key = 1;</code>
       */
      public Builder clearIdentityKey() {
        if (identityKeyBuilder_ == null) {
          identityKey_ = null;
          onChanged();
        } else {
          identityKey_ = null;
          identityKeyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Identity key MUST be signed by the wallet.
       * </pre>
       *
       * <code>.xmtp.message_contents.SignedPublicKey identity_key = 1;</code>
       */
      public xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.Builder getIdentityKeyBuilder() {
        
        onChanged();
        return getIdentityKeyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Identity key MUST be signed by the wallet.
       * </pre>
       *
       * <code>.xmtp.message_contents.SignedPublicKey identity_key = 1;</code>
       */
      public xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyOrBuilder getIdentityKeyOrBuilder() {
        if (identityKeyBuilder_ != null) {
          return identityKeyBuilder_.getMessageOrBuilder();
        } else {
          return identityKey_ == null ?
              xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.getDefaultInstance() : identityKey_;
        }
      }
      /**
       * <pre>
       * Identity key MUST be signed by the wallet.
       * </pre>
       *
       * <code>.xmtp.message_contents.SignedPublicKey identity_key = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey, xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.Builder, xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyOrBuilder> 
          getIdentityKeyFieldBuilder() {
        if (identityKeyBuilder_ == null) {
          identityKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey, xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.Builder, xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyOrBuilder>(
                  getIdentityKey(),
                  getParentForChildren(),
                  isClean());
          identityKey_ = null;
        }
        return identityKeyBuilder_;
      }

      private xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey preKey_;
      private com.google.protobuf.SingleFieldBuilderV3<
          xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey, xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.Builder, xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyOrBuilder> preKeyBuilder_;
      /**
       * <pre>
       * Pre-key MUST be signed by the identity key.
       * </pre>
       *
       * <code>.xmtp.message_contents.SignedPublicKey pre_key = 2;</code>
       * @return Whether the preKey field is set.
       */
      public boolean hasPreKey() {
        return preKeyBuilder_ != null || preKey_ != null;
      }
      /**
       * <pre>
       * Pre-key MUST be signed by the identity key.
       * </pre>
       *
       * <code>.xmtp.message_contents.SignedPublicKey pre_key = 2;</code>
       * @return The preKey.
       */
      public xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey getPreKey() {
        if (preKeyBuilder_ == null) {
          return preKey_ == null ? xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.getDefaultInstance() : preKey_;
        } else {
          return preKeyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Pre-key MUST be signed by the identity key.
       * </pre>
       *
       * <code>.xmtp.message_contents.SignedPublicKey pre_key = 2;</code>
       */
      public Builder setPreKey(xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey value) {
        if (preKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preKey_ = value;
          onChanged();
        } else {
          preKeyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Pre-key MUST be signed by the identity key.
       * </pre>
       *
       * <code>.xmtp.message_contents.SignedPublicKey pre_key = 2;</code>
       */
      public Builder setPreKey(
          xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.Builder builderForValue) {
        if (preKeyBuilder_ == null) {
          preKey_ = builderForValue.build();
          onChanged();
        } else {
          preKeyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Pre-key MUST be signed by the identity key.
       * </pre>
       *
       * <code>.xmtp.message_contents.SignedPublicKey pre_key = 2;</code>
       */
      public Builder mergePreKey(xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey value) {
        if (preKeyBuilder_ == null) {
          if (preKey_ != null) {
            preKey_ =
              xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.newBuilder(preKey_).mergeFrom(value).buildPartial();
          } else {
            preKey_ = value;
          }
          onChanged();
        } else {
          preKeyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Pre-key MUST be signed by the identity key.
       * </pre>
       *
       * <code>.xmtp.message_contents.SignedPublicKey pre_key = 2;</code>
       */
      public Builder clearPreKey() {
        if (preKeyBuilder_ == null) {
          preKey_ = null;
          onChanged();
        } else {
          preKey_ = null;
          preKeyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Pre-key MUST be signed by the identity key.
       * </pre>
       *
       * <code>.xmtp.message_contents.SignedPublicKey pre_key = 2;</code>
       */
      public xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.Builder getPreKeyBuilder() {
        
        onChanged();
        return getPreKeyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Pre-key MUST be signed by the identity key.
       * </pre>
       *
       * <code>.xmtp.message_contents.SignedPublicKey pre_key = 2;</code>
       */
      public xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyOrBuilder getPreKeyOrBuilder() {
        if (preKeyBuilder_ != null) {
          return preKeyBuilder_.getMessageOrBuilder();
        } else {
          return preKey_ == null ?
              xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.getDefaultInstance() : preKey_;
        }
      }
      /**
       * <pre>
       * Pre-key MUST be signed by the identity key.
       * </pre>
       *
       * <code>.xmtp.message_contents.SignedPublicKey pre_key = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey, xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.Builder, xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyOrBuilder> 
          getPreKeyFieldBuilder() {
        if (preKeyBuilder_ == null) {
          preKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey, xmtp.message_contents.PublicKeyOuterClass.SignedPublicKey.Builder, xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyOrBuilder>(
                  getPreKey(),
                  getParentForChildren(),
                  isClean());
          preKey_ = null;
        }
        return preKeyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xmtp.message_contents.SignedPublicKeyBundle)
    }

    // @@protoc_insertion_point(class_scope:xmtp.message_contents.SignedPublicKeyBundle)
    private static final xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle();
    }

    public static xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignedPublicKeyBundle>
        PARSER = new com.google.protobuf.AbstractParser<SignedPublicKeyBundle>() {
      @java.lang.Override
      public SignedPublicKeyBundle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignedPublicKeyBundle(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignedPublicKeyBundle> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignedPublicKeyBundle> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xmtp.message_contents.PublicKeyOuterClass.SignedPublicKeyBundle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PublicKeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xmtp.message_contents.PublicKey)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 timestamp = 1;</code>
     * @return The timestamp.
     */
    long getTimestamp();

    /**
     * <code>.xmtp.message_contents.Signature signature = 2;</code>
     * @return Whether the signature field is set.
     */
    boolean hasSignature();
    /**
     * <code>.xmtp.message_contents.Signature signature = 2;</code>
     * @return The signature.
     */
    xmtp.message_contents.SignatureOuterClass.Signature getSignature();
    /**
     * <code>.xmtp.message_contents.Signature signature = 2;</code>
     */
    xmtp.message_contents.SignatureOuterClass.SignatureOrBuilder getSignatureOrBuilder();

    /**
     * <code>.xmtp.message_contents.PublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
     * @return Whether the secp256k1Uncompressed field is set.
     */
    boolean hasSecp256K1Uncompressed();
    /**
     * <code>.xmtp.message_contents.PublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
     * @return The secp256k1Uncompressed.
     */
    xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed getSecp256K1Uncompressed();
    /**
     * <code>.xmtp.message_contents.PublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
     */
    xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1UncompressedOrBuilder getSecp256K1UncompressedOrBuilder();

    public xmtp.message_contents.PublicKeyOuterClass.PublicKey.UnionCase getUnionCase();
  }
  /**
   * <pre>
   * PublicKey represents a generalized public key,
   * defined as a union to support cryptographic algorithm agility.
   * </pre>
   *
   * Protobuf type {@code xmtp.message_contents.PublicKey}
   */
  public static final class PublicKey extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xmtp.message_contents.PublicKey)
      PublicKeyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PublicKey.newBuilder() to construct.
    private PublicKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PublicKey() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PublicKey();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PublicKey(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              timestamp_ = input.readUInt64();
              break;
            }
            case 18: {
              xmtp.message_contents.SignatureOuterClass.Signature.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = signature_.toBuilder();
              }
              signature_ = input.readMessage(xmtp.message_contents.SignatureOuterClass.Signature.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signature_);
                signature_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 26: {
              xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.Builder subBuilder = null;
              if (unionCase_ == 3) {
                subBuilder = ((xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed) union_).toBuilder();
              }
              union_ =
                  input.readMessage(xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed) union_);
                union_ = subBuilder.buildPartial();
              }
              unionCase_ = 3;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_PublicKey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_PublicKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xmtp.message_contents.PublicKeyOuterClass.PublicKey.class, xmtp.message_contents.PublicKeyOuterClass.PublicKey.Builder.class);
    }

    public interface Secp256k1UncompressedOrBuilder extends
        // @@protoc_insertion_point(interface_extends:xmtp.message_contents.PublicKey.Secp256k1Uncompressed)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * uncompressed point with prefix (0x04) [ P || X || Y ], 65 bytes
       * </pre>
       *
       * <code>bytes bytes = 1;</code>
       * @return The bytes.
       */
      com.google.protobuf.ByteString getBytes();
    }
    /**
     * <pre>
     * The key bytes
     * </pre>
     *
     * Protobuf type {@code xmtp.message_contents.PublicKey.Secp256k1Uncompressed}
     */
    public static final class Secp256k1Uncompressed extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:xmtp.message_contents.PublicKey.Secp256k1Uncompressed)
        Secp256k1UncompressedOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Secp256k1Uncompressed.newBuilder() to construct.
      private Secp256k1Uncompressed(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Secp256k1Uncompressed() {
        bytes_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Secp256k1Uncompressed();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Secp256k1Uncompressed(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {

                bytes_ = input.readBytes();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_PublicKey_Secp256k1Uncompressed_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_PublicKey_Secp256k1Uncompressed_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.class, xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.Builder.class);
      }

      public static final int BYTES_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString bytes_;
      /**
       * <pre>
       * uncompressed point with prefix (0x04) [ P || X || Y ], 65 bytes
       * </pre>
       *
       * <code>bytes bytes = 1;</code>
       * @return The bytes.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBytes() {
        return bytes_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!bytes_.isEmpty()) {
          output.writeBytes(1, bytes_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!bytes_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, bytes_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed)) {
          return super.equals(obj);
        }
        xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed other = (xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed) obj;

        if (!getBytes()
            .equals(other.getBytes())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + BYTES_FIELD_NUMBER;
        hash = (53 * hash) + getBytes().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * The key bytes
       * </pre>
       *
       * Protobuf type {@code xmtp.message_contents.PublicKey.Secp256k1Uncompressed}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:xmtp.message_contents.PublicKey.Secp256k1Uncompressed)
          xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1UncompressedOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_PublicKey_Secp256k1Uncompressed_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_PublicKey_Secp256k1Uncompressed_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.class, xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.Builder.class);
        }

        // Construct using xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bytes_ = com.google.protobuf.ByteString.EMPTY;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_PublicKey_Secp256k1Uncompressed_descriptor;
        }

        @java.lang.Override
        public xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed getDefaultInstanceForType() {
          return xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.getDefaultInstance();
        }

        @java.lang.Override
        public xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed build() {
          xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed buildPartial() {
          xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed result = new xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed(this);
          result.bytes_ = bytes_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed) {
            return mergeFrom((xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed other) {
          if (other == xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.getDefaultInstance()) return this;
          if (other.getBytes() != com.google.protobuf.ByteString.EMPTY) {
            setBytes(other.getBytes());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.google.protobuf.ByteString bytes_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         * uncompressed point with prefix (0x04) [ P || X || Y ], 65 bytes
         * </pre>
         *
         * <code>bytes bytes = 1;</code>
         * @return The bytes.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getBytes() {
          return bytes_;
        }
        /**
         * <pre>
         * uncompressed point with prefix (0x04) [ P || X || Y ], 65 bytes
         * </pre>
         *
         * <code>bytes bytes = 1;</code>
         * @param value The bytes to set.
         * @return This builder for chaining.
         */
        public Builder setBytes(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          bytes_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * uncompressed point with prefix (0x04) [ P || X || Y ], 65 bytes
         * </pre>
         *
         * <code>bytes bytes = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearBytes() {
          
          bytes_ = getDefaultInstance().getBytes();
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:xmtp.message_contents.PublicKey.Secp256k1Uncompressed)
      }

      // @@protoc_insertion_point(class_scope:xmtp.message_contents.PublicKey.Secp256k1Uncompressed)
      private static final xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed();
      }

      public static xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Secp256k1Uncompressed>
          PARSER = new com.google.protobuf.AbstractParser<Secp256k1Uncompressed>() {
        @java.lang.Override
        public Secp256k1Uncompressed parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Secp256k1Uncompressed(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Secp256k1Uncompressed> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Secp256k1Uncompressed> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    private int unionCase_ = 0;
    private java.lang.Object union_;
    public enum UnionCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      SECP256K1_UNCOMPRESSED(3),
      UNION_NOT_SET(0);
      private final int value;
      private UnionCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static UnionCase valueOf(int value) {
        return forNumber(value);
      }

      public static UnionCase forNumber(int value) {
        switch (value) {
          case 3: return SECP256K1_UNCOMPRESSED;
          case 0: return UNION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public UnionCase
    getUnionCase() {
      return UnionCase.forNumber(
          unionCase_);
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>uint64 timestamp = 1;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 2;
    private xmtp.message_contents.SignatureOuterClass.Signature signature_;
    /**
     * <code>.xmtp.message_contents.Signature signature = 2;</code>
     * @return Whether the signature field is set.
     */
    @java.lang.Override
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.xmtp.message_contents.Signature signature = 2;</code>
     * @return The signature.
     */
    @java.lang.Override
    public xmtp.message_contents.SignatureOuterClass.Signature getSignature() {
      return signature_ == null ? xmtp.message_contents.SignatureOuterClass.Signature.getDefaultInstance() : signature_;
    }
    /**
     * <code>.xmtp.message_contents.Signature signature = 2;</code>
     */
    @java.lang.Override
    public xmtp.message_contents.SignatureOuterClass.SignatureOrBuilder getSignatureOrBuilder() {
      return signature_ == null ? xmtp.message_contents.SignatureOuterClass.Signature.getDefaultInstance() : signature_;
    }

    public static final int SECP256K1_UNCOMPRESSED_FIELD_NUMBER = 3;
    /**
     * <code>.xmtp.message_contents.PublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
     * @return Whether the secp256k1Uncompressed field is set.
     */
    @java.lang.Override
    public boolean hasSecp256K1Uncompressed() {
      return unionCase_ == 3;
    }
    /**
     * <code>.xmtp.message_contents.PublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
     * @return The secp256k1Uncompressed.
     */
    @java.lang.Override
    public xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed getSecp256K1Uncompressed() {
      if (unionCase_ == 3) {
         return (xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed) union_;
      }
      return xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.getDefaultInstance();
    }
    /**
     * <code>.xmtp.message_contents.PublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
     */
    @java.lang.Override
    public xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1UncompressedOrBuilder getSecp256K1UncompressedOrBuilder() {
      if (unionCase_ == 3) {
         return (xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed) union_;
      }
      return xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timestamp_ != 0L) {
        output.writeUInt64(1, timestamp_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getSignature());
      }
      if (unionCase_ == 3) {
        output.writeMessage(3, (xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed) union_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, timestamp_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSignature());
      }
      if (unionCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed) union_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xmtp.message_contents.PublicKeyOuterClass.PublicKey)) {
        return super.equals(obj);
      }
      xmtp.message_contents.PublicKeyOuterClass.PublicKey other = (xmtp.message_contents.PublicKeyOuterClass.PublicKey) obj;

      if (getTimestamp()
          != other.getTimestamp()) return false;
      if (hasSignature() != other.hasSignature()) return false;
      if (hasSignature()) {
        if (!getSignature()
            .equals(other.getSignature())) return false;
      }
      if (!getUnionCase().equals(other.getUnionCase())) return false;
      switch (unionCase_) {
        case 3:
          if (!getSecp256K1Uncompressed()
              .equals(other.getSecp256K1Uncompressed())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamp());
      if (hasSignature()) {
        hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
        hash = (53 * hash) + getSignature().hashCode();
      }
      switch (unionCase_) {
        case 3:
          hash = (37 * hash) + SECP256K1_UNCOMPRESSED_FIELD_NUMBER;
          hash = (53 * hash) + getSecp256K1Uncompressed().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xmtp.message_contents.PublicKeyOuterClass.PublicKey parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKey parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xmtp.message_contents.PublicKeyOuterClass.PublicKey prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PublicKey represents a generalized public key,
     * defined as a union to support cryptographic algorithm agility.
     * </pre>
     *
     * Protobuf type {@code xmtp.message_contents.PublicKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xmtp.message_contents.PublicKey)
        xmtp.message_contents.PublicKeyOuterClass.PublicKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_PublicKey_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_PublicKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xmtp.message_contents.PublicKeyOuterClass.PublicKey.class, xmtp.message_contents.PublicKeyOuterClass.PublicKey.Builder.class);
      }

      // Construct using xmtp.message_contents.PublicKeyOuterClass.PublicKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSignatureFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        timestamp_ = 0L;

        if (signatureBuilder_ == null) {
          signature_ = null;
        } else {
          signatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        unionCase_ = 0;
        union_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_PublicKey_descriptor;
      }

      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.PublicKey getDefaultInstanceForType() {
        return xmtp.message_contents.PublicKeyOuterClass.PublicKey.getDefaultInstance();
      }

      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.PublicKey build() {
        xmtp.message_contents.PublicKeyOuterClass.PublicKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.PublicKey buildPartial() {
        xmtp.message_contents.PublicKeyOuterClass.PublicKey result = new xmtp.message_contents.PublicKeyOuterClass.PublicKey(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (signatureBuilder_ == null) {
            result.signature_ = signature_;
          } else {
            result.signature_ = signatureBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (unionCase_ == 3) {
          if (secp256K1UncompressedBuilder_ == null) {
            result.union_ = union_;
          } else {
            result.union_ = secp256K1UncompressedBuilder_.build();
          }
        }
        result.bitField0_ = to_bitField0_;
        result.unionCase_ = unionCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xmtp.message_contents.PublicKeyOuterClass.PublicKey) {
          return mergeFrom((xmtp.message_contents.PublicKeyOuterClass.PublicKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xmtp.message_contents.PublicKeyOuterClass.PublicKey other) {
        if (other == xmtp.message_contents.PublicKeyOuterClass.PublicKey.getDefaultInstance()) return this;
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasSignature()) {
          mergeSignature(other.getSignature());
        }
        switch (other.getUnionCase()) {
          case SECP256K1_UNCOMPRESSED: {
            mergeSecp256K1Uncompressed(other.getSecp256K1Uncompressed());
            break;
          }
          case UNION_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        xmtp.message_contents.PublicKeyOuterClass.PublicKey parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (xmtp.message_contents.PublicKeyOuterClass.PublicKey) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int unionCase_ = 0;
      private java.lang.Object union_;
      public UnionCase
          getUnionCase() {
        return UnionCase.forNumber(
            unionCase_);
      }

      public Builder clearUnion() {
        unionCase_ = 0;
        union_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private long timestamp_ ;
      /**
       * <code>uint64 timestamp = 1;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>uint64 timestamp = 1;</code>
       * @param value The timestamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimestamp(long value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 timestamp = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private xmtp.message_contents.SignatureOuterClass.Signature signature_;
      private com.google.protobuf.SingleFieldBuilderV3<
          xmtp.message_contents.SignatureOuterClass.Signature, xmtp.message_contents.SignatureOuterClass.Signature.Builder, xmtp.message_contents.SignatureOuterClass.SignatureOrBuilder> signatureBuilder_;
      /**
       * <code>.xmtp.message_contents.Signature signature = 2;</code>
       * @return Whether the signature field is set.
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.xmtp.message_contents.Signature signature = 2;</code>
       * @return The signature.
       */
      public xmtp.message_contents.SignatureOuterClass.Signature getSignature() {
        if (signatureBuilder_ == null) {
          return signature_ == null ? xmtp.message_contents.SignatureOuterClass.Signature.getDefaultInstance() : signature_;
        } else {
          return signatureBuilder_.getMessage();
        }
      }
      /**
       * <code>.xmtp.message_contents.Signature signature = 2;</code>
       */
      public Builder setSignature(xmtp.message_contents.SignatureOuterClass.Signature value) {
        if (signatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signature_ = value;
          onChanged();
        } else {
          signatureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>.xmtp.message_contents.Signature signature = 2;</code>
       */
      public Builder setSignature(
          xmtp.message_contents.SignatureOuterClass.Signature.Builder builderForValue) {
        if (signatureBuilder_ == null) {
          signature_ = builderForValue.build();
          onChanged();
        } else {
          signatureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>.xmtp.message_contents.Signature signature = 2;</code>
       */
      public Builder mergeSignature(xmtp.message_contents.SignatureOuterClass.Signature value) {
        if (signatureBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              signature_ != null &&
              signature_ != xmtp.message_contents.SignatureOuterClass.Signature.getDefaultInstance()) {
            signature_ =
              xmtp.message_contents.SignatureOuterClass.Signature.newBuilder(signature_).mergeFrom(value).buildPartial();
          } else {
            signature_ = value;
          }
          onChanged();
        } else {
          signatureBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>.xmtp.message_contents.Signature signature = 2;</code>
       */
      public Builder clearSignature() {
        if (signatureBuilder_ == null) {
          signature_ = null;
          onChanged();
        } else {
          signatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>.xmtp.message_contents.Signature signature = 2;</code>
       */
      public xmtp.message_contents.SignatureOuterClass.Signature.Builder getSignatureBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSignatureFieldBuilder().getBuilder();
      }
      /**
       * <code>.xmtp.message_contents.Signature signature = 2;</code>
       */
      public xmtp.message_contents.SignatureOuterClass.SignatureOrBuilder getSignatureOrBuilder() {
        if (signatureBuilder_ != null) {
          return signatureBuilder_.getMessageOrBuilder();
        } else {
          return signature_ == null ?
              xmtp.message_contents.SignatureOuterClass.Signature.getDefaultInstance() : signature_;
        }
      }
      /**
       * <code>.xmtp.message_contents.Signature signature = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xmtp.message_contents.SignatureOuterClass.Signature, xmtp.message_contents.SignatureOuterClass.Signature.Builder, xmtp.message_contents.SignatureOuterClass.SignatureOrBuilder> 
          getSignatureFieldBuilder() {
        if (signatureBuilder_ == null) {
          signatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xmtp.message_contents.SignatureOuterClass.Signature, xmtp.message_contents.SignatureOuterClass.Signature.Builder, xmtp.message_contents.SignatureOuterClass.SignatureOrBuilder>(
                  getSignature(),
                  getParentForChildren(),
                  isClean());
          signature_ = null;
        }
        return signatureBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed, xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.Builder, xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1UncompressedOrBuilder> secp256K1UncompressedBuilder_;
      /**
       * <code>.xmtp.message_contents.PublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
       * @return Whether the secp256k1Uncompressed field is set.
       */
      @java.lang.Override
      public boolean hasSecp256K1Uncompressed() {
        return unionCase_ == 3;
      }
      /**
       * <code>.xmtp.message_contents.PublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
       * @return The secp256k1Uncompressed.
       */
      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed getSecp256K1Uncompressed() {
        if (secp256K1UncompressedBuilder_ == null) {
          if (unionCase_ == 3) {
            return (xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed) union_;
          }
          return xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.getDefaultInstance();
        } else {
          if (unionCase_ == 3) {
            return secp256K1UncompressedBuilder_.getMessage();
          }
          return xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.getDefaultInstance();
        }
      }
      /**
       * <code>.xmtp.message_contents.PublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
       */
      public Builder setSecp256K1Uncompressed(xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed value) {
        if (secp256K1UncompressedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          union_ = value;
          onChanged();
        } else {
          secp256K1UncompressedBuilder_.setMessage(value);
        }
        unionCase_ = 3;
        return this;
      }
      /**
       * <code>.xmtp.message_contents.PublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
       */
      public Builder setSecp256K1Uncompressed(
          xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.Builder builderForValue) {
        if (secp256K1UncompressedBuilder_ == null) {
          union_ = builderForValue.build();
          onChanged();
        } else {
          secp256K1UncompressedBuilder_.setMessage(builderForValue.build());
        }
        unionCase_ = 3;
        return this;
      }
      /**
       * <code>.xmtp.message_contents.PublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
       */
      public Builder mergeSecp256K1Uncompressed(xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed value) {
        if (secp256K1UncompressedBuilder_ == null) {
          if (unionCase_ == 3 &&
              union_ != xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.getDefaultInstance()) {
            union_ = xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.newBuilder((xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed) union_)
                .mergeFrom(value).buildPartial();
          } else {
            union_ = value;
          }
          onChanged();
        } else {
          if (unionCase_ == 3) {
            secp256K1UncompressedBuilder_.mergeFrom(value);
          }
          secp256K1UncompressedBuilder_.setMessage(value);
        }
        unionCase_ = 3;
        return this;
      }
      /**
       * <code>.xmtp.message_contents.PublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
       */
      public Builder clearSecp256K1Uncompressed() {
        if (secp256K1UncompressedBuilder_ == null) {
          if (unionCase_ == 3) {
            unionCase_ = 0;
            union_ = null;
            onChanged();
          }
        } else {
          if (unionCase_ == 3) {
            unionCase_ = 0;
            union_ = null;
          }
          secp256K1UncompressedBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.xmtp.message_contents.PublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
       */
      public xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.Builder getSecp256K1UncompressedBuilder() {
        return getSecp256K1UncompressedFieldBuilder().getBuilder();
      }
      /**
       * <code>.xmtp.message_contents.PublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
       */
      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1UncompressedOrBuilder getSecp256K1UncompressedOrBuilder() {
        if ((unionCase_ == 3) && (secp256K1UncompressedBuilder_ != null)) {
          return secp256K1UncompressedBuilder_.getMessageOrBuilder();
        } else {
          if (unionCase_ == 3) {
            return (xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed) union_;
          }
          return xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.getDefaultInstance();
        }
      }
      /**
       * <code>.xmtp.message_contents.PublicKey.Secp256k1Uncompressed secp256k1_uncompressed = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed, xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.Builder, xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1UncompressedOrBuilder> 
          getSecp256K1UncompressedFieldBuilder() {
        if (secp256K1UncompressedBuilder_ == null) {
          if (!(unionCase_ == 3)) {
            union_ = xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.getDefaultInstance();
          }
          secp256K1UncompressedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed, xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed.Builder, xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1UncompressedOrBuilder>(
                  (xmtp.message_contents.PublicKeyOuterClass.PublicKey.Secp256k1Uncompressed) union_,
                  getParentForChildren(),
                  isClean());
          union_ = null;
        }
        unionCase_ = 3;
        onChanged();;
        return secp256K1UncompressedBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xmtp.message_contents.PublicKey)
    }

    // @@protoc_insertion_point(class_scope:xmtp.message_contents.PublicKey)
    private static final xmtp.message_contents.PublicKeyOuterClass.PublicKey DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xmtp.message_contents.PublicKeyOuterClass.PublicKey();
    }

    public static xmtp.message_contents.PublicKeyOuterClass.PublicKey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PublicKey>
        PARSER = new com.google.protobuf.AbstractParser<PublicKey>() {
      @java.lang.Override
      public PublicKey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PublicKey(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PublicKey> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PublicKey> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xmtp.message_contents.PublicKeyOuterClass.PublicKey getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PublicKeyBundleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xmtp.message_contents.PublicKeyBundle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Identity key MUST be signed by the wallet.
     * </pre>
     *
     * <code>.xmtp.message_contents.PublicKey identity_key = 1;</code>
     * @return Whether the identityKey field is set.
     */
    boolean hasIdentityKey();
    /**
     * <pre>
     * Identity key MUST be signed by the wallet.
     * </pre>
     *
     * <code>.xmtp.message_contents.PublicKey identity_key = 1;</code>
     * @return The identityKey.
     */
    xmtp.message_contents.PublicKeyOuterClass.PublicKey getIdentityKey();
    /**
     * <pre>
     * Identity key MUST be signed by the wallet.
     * </pre>
     *
     * <code>.xmtp.message_contents.PublicKey identity_key = 1;</code>
     */
    xmtp.message_contents.PublicKeyOuterClass.PublicKeyOrBuilder getIdentityKeyOrBuilder();

    /**
     * <pre>
     * Pre-key MUST be signed by the identity key.
     * </pre>
     *
     * <code>.xmtp.message_contents.PublicKey pre_key = 2;</code>
     * @return Whether the preKey field is set.
     */
    boolean hasPreKey();
    /**
     * <pre>
     * Pre-key MUST be signed by the identity key.
     * </pre>
     *
     * <code>.xmtp.message_contents.PublicKey pre_key = 2;</code>
     * @return The preKey.
     */
    xmtp.message_contents.PublicKeyOuterClass.PublicKey getPreKey();
    /**
     * <pre>
     * Pre-key MUST be signed by the identity key.
     * </pre>
     *
     * <code>.xmtp.message_contents.PublicKey pre_key = 2;</code>
     */
    xmtp.message_contents.PublicKeyOuterClass.PublicKeyOrBuilder getPreKeyOrBuilder();
  }
  /**
   * <pre>
   * PublicKeyBundle packages the cryptographic keys associated with a wallet,
   * both senders and recipients are identified by their key bundles.
   * </pre>
   *
   * Protobuf type {@code xmtp.message_contents.PublicKeyBundle}
   */
  public static final class PublicKeyBundle extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xmtp.message_contents.PublicKeyBundle)
      PublicKeyBundleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PublicKeyBundle.newBuilder() to construct.
    private PublicKeyBundle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PublicKeyBundle() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PublicKeyBundle();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PublicKeyBundle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              xmtp.message_contents.PublicKeyOuterClass.PublicKey.Builder subBuilder = null;
              if (identityKey_ != null) {
                subBuilder = identityKey_.toBuilder();
              }
              identityKey_ = input.readMessage(xmtp.message_contents.PublicKeyOuterClass.PublicKey.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(identityKey_);
                identityKey_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              xmtp.message_contents.PublicKeyOuterClass.PublicKey.Builder subBuilder = null;
              if (preKey_ != null) {
                subBuilder = preKey_.toBuilder();
              }
              preKey_ = input.readMessage(xmtp.message_contents.PublicKeyOuterClass.PublicKey.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(preKey_);
                preKey_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_PublicKeyBundle_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_PublicKeyBundle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle.class, xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle.Builder.class);
    }

    public static final int IDENTITY_KEY_FIELD_NUMBER = 1;
    private xmtp.message_contents.PublicKeyOuterClass.PublicKey identityKey_;
    /**
     * <pre>
     * Identity key MUST be signed by the wallet.
     * </pre>
     *
     * <code>.xmtp.message_contents.PublicKey identity_key = 1;</code>
     * @return Whether the identityKey field is set.
     */
    @java.lang.Override
    public boolean hasIdentityKey() {
      return identityKey_ != null;
    }
    /**
     * <pre>
     * Identity key MUST be signed by the wallet.
     * </pre>
     *
     * <code>.xmtp.message_contents.PublicKey identity_key = 1;</code>
     * @return The identityKey.
     */
    @java.lang.Override
    public xmtp.message_contents.PublicKeyOuterClass.PublicKey getIdentityKey() {
      return identityKey_ == null ? xmtp.message_contents.PublicKeyOuterClass.PublicKey.getDefaultInstance() : identityKey_;
    }
    /**
     * <pre>
     * Identity key MUST be signed by the wallet.
     * </pre>
     *
     * <code>.xmtp.message_contents.PublicKey identity_key = 1;</code>
     */
    @java.lang.Override
    public xmtp.message_contents.PublicKeyOuterClass.PublicKeyOrBuilder getIdentityKeyOrBuilder() {
      return getIdentityKey();
    }

    public static final int PRE_KEY_FIELD_NUMBER = 2;
    private xmtp.message_contents.PublicKeyOuterClass.PublicKey preKey_;
    /**
     * <pre>
     * Pre-key MUST be signed by the identity key.
     * </pre>
     *
     * <code>.xmtp.message_contents.PublicKey pre_key = 2;</code>
     * @return Whether the preKey field is set.
     */
    @java.lang.Override
    public boolean hasPreKey() {
      return preKey_ != null;
    }
    /**
     * <pre>
     * Pre-key MUST be signed by the identity key.
     * </pre>
     *
     * <code>.xmtp.message_contents.PublicKey pre_key = 2;</code>
     * @return The preKey.
     */
    @java.lang.Override
    public xmtp.message_contents.PublicKeyOuterClass.PublicKey getPreKey() {
      return preKey_ == null ? xmtp.message_contents.PublicKeyOuterClass.PublicKey.getDefaultInstance() : preKey_;
    }
    /**
     * <pre>
     * Pre-key MUST be signed by the identity key.
     * </pre>
     *
     * <code>.xmtp.message_contents.PublicKey pre_key = 2;</code>
     */
    @java.lang.Override
    public xmtp.message_contents.PublicKeyOuterClass.PublicKeyOrBuilder getPreKeyOrBuilder() {
      return getPreKey();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (identityKey_ != null) {
        output.writeMessage(1, getIdentityKey());
      }
      if (preKey_ != null) {
        output.writeMessage(2, getPreKey());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (identityKey_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getIdentityKey());
      }
      if (preKey_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPreKey());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle)) {
        return super.equals(obj);
      }
      xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle other = (xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle) obj;

      if (hasIdentityKey() != other.hasIdentityKey()) return false;
      if (hasIdentityKey()) {
        if (!getIdentityKey()
            .equals(other.getIdentityKey())) return false;
      }
      if (hasPreKey() != other.hasPreKey()) return false;
      if (hasPreKey()) {
        if (!getPreKey()
            .equals(other.getPreKey())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIdentityKey()) {
        hash = (37 * hash) + IDENTITY_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getIdentityKey().hashCode();
      }
      if (hasPreKey()) {
        hash = (37 * hash) + PRE_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPreKey().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PublicKeyBundle packages the cryptographic keys associated with a wallet,
     * both senders and recipients are identified by their key bundles.
     * </pre>
     *
     * Protobuf type {@code xmtp.message_contents.PublicKeyBundle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xmtp.message_contents.PublicKeyBundle)
        xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_PublicKeyBundle_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_PublicKeyBundle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle.class, xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle.Builder.class);
      }

      // Construct using xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (identityKeyBuilder_ == null) {
          identityKey_ = null;
        } else {
          identityKey_ = null;
          identityKeyBuilder_ = null;
        }
        if (preKeyBuilder_ == null) {
          preKey_ = null;
        } else {
          preKey_ = null;
          preKeyBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xmtp.message_contents.PublicKeyOuterClass.internal_static_xmtp_message_contents_PublicKeyBundle_descriptor;
      }

      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle getDefaultInstanceForType() {
        return xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle.getDefaultInstance();
      }

      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle build() {
        xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle buildPartial() {
        xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle result = new xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle(this);
        if (identityKeyBuilder_ == null) {
          result.identityKey_ = identityKey_;
        } else {
          result.identityKey_ = identityKeyBuilder_.build();
        }
        if (preKeyBuilder_ == null) {
          result.preKey_ = preKey_;
        } else {
          result.preKey_ = preKeyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle) {
          return mergeFrom((xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle other) {
        if (other == xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle.getDefaultInstance()) return this;
        if (other.hasIdentityKey()) {
          mergeIdentityKey(other.getIdentityKey());
        }
        if (other.hasPreKey()) {
          mergePreKey(other.getPreKey());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private xmtp.message_contents.PublicKeyOuterClass.PublicKey identityKey_;
      private com.google.protobuf.SingleFieldBuilderV3<
          xmtp.message_contents.PublicKeyOuterClass.PublicKey, xmtp.message_contents.PublicKeyOuterClass.PublicKey.Builder, xmtp.message_contents.PublicKeyOuterClass.PublicKeyOrBuilder> identityKeyBuilder_;
      /**
       * <pre>
       * Identity key MUST be signed by the wallet.
       * </pre>
       *
       * <code>.xmtp.message_contents.PublicKey identity_key = 1;</code>
       * @return Whether the identityKey field is set.
       */
      public boolean hasIdentityKey() {
        return identityKeyBuilder_ != null || identityKey_ != null;
      }
      /**
       * <pre>
       * Identity key MUST be signed by the wallet.
       * </pre>
       *
       * <code>.xmtp.message_contents.PublicKey identity_key = 1;</code>
       * @return The identityKey.
       */
      public xmtp.message_contents.PublicKeyOuterClass.PublicKey getIdentityKey() {
        if (identityKeyBuilder_ == null) {
          return identityKey_ == null ? xmtp.message_contents.PublicKeyOuterClass.PublicKey.getDefaultInstance() : identityKey_;
        } else {
          return identityKeyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Identity key MUST be signed by the wallet.
       * </pre>
       *
       * <code>.xmtp.message_contents.PublicKey identity_key = 1;</code>
       */
      public Builder setIdentityKey(xmtp.message_contents.PublicKeyOuterClass.PublicKey value) {
        if (identityKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          identityKey_ = value;
          onChanged();
        } else {
          identityKeyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Identity key MUST be signed by the wallet.
       * </pre>
       *
       * <code>.xmtp.message_contents.PublicKey identity_key = 1;</code>
       */
      public Builder setIdentityKey(
          xmtp.message_contents.PublicKeyOuterClass.PublicKey.Builder builderForValue) {
        if (identityKeyBuilder_ == null) {
          identityKey_ = builderForValue.build();
          onChanged();
        } else {
          identityKeyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Identity key MUST be signed by the wallet.
       * </pre>
       *
       * <code>.xmtp.message_contents.PublicKey identity_key = 1;</code>
       */
      public Builder mergeIdentityKey(xmtp.message_contents.PublicKeyOuterClass.PublicKey value) {
        if (identityKeyBuilder_ == null) {
          if (identityKey_ != null) {
            identityKey_ =
              xmtp.message_contents.PublicKeyOuterClass.PublicKey.newBuilder(identityKey_).mergeFrom(value).buildPartial();
          } else {
            identityKey_ = value;
          }
          onChanged();
        } else {
          identityKeyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Identity key MUST be signed by the wallet.
       * </pre>
       *
       * <code>.xmtp.message_contents.PublicKey identity_key = 1;</code>
       */
      public Builder clearIdentityKey() {
        if (identityKeyBuilder_ == null) {
          identityKey_ = null;
          onChanged();
        } else {
          identityKey_ = null;
          identityKeyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Identity key MUST be signed by the wallet.
       * </pre>
       *
       * <code>.xmtp.message_contents.PublicKey identity_key = 1;</code>
       */
      public xmtp.message_contents.PublicKeyOuterClass.PublicKey.Builder getIdentityKeyBuilder() {
        
        onChanged();
        return getIdentityKeyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Identity key MUST be signed by the wallet.
       * </pre>
       *
       * <code>.xmtp.message_contents.PublicKey identity_key = 1;</code>
       */
      public xmtp.message_contents.PublicKeyOuterClass.PublicKeyOrBuilder getIdentityKeyOrBuilder() {
        if (identityKeyBuilder_ != null) {
          return identityKeyBuilder_.getMessageOrBuilder();
        } else {
          return identityKey_ == null ?
              xmtp.message_contents.PublicKeyOuterClass.PublicKey.getDefaultInstance() : identityKey_;
        }
      }
      /**
       * <pre>
       * Identity key MUST be signed by the wallet.
       * </pre>
       *
       * <code>.xmtp.message_contents.PublicKey identity_key = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xmtp.message_contents.PublicKeyOuterClass.PublicKey, xmtp.message_contents.PublicKeyOuterClass.PublicKey.Builder, xmtp.message_contents.PublicKeyOuterClass.PublicKeyOrBuilder> 
          getIdentityKeyFieldBuilder() {
        if (identityKeyBuilder_ == null) {
          identityKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xmtp.message_contents.PublicKeyOuterClass.PublicKey, xmtp.message_contents.PublicKeyOuterClass.PublicKey.Builder, xmtp.message_contents.PublicKeyOuterClass.PublicKeyOrBuilder>(
                  getIdentityKey(),
                  getParentForChildren(),
                  isClean());
          identityKey_ = null;
        }
        return identityKeyBuilder_;
      }

      private xmtp.message_contents.PublicKeyOuterClass.PublicKey preKey_;
      private com.google.protobuf.SingleFieldBuilderV3<
          xmtp.message_contents.PublicKeyOuterClass.PublicKey, xmtp.message_contents.PublicKeyOuterClass.PublicKey.Builder, xmtp.message_contents.PublicKeyOuterClass.PublicKeyOrBuilder> preKeyBuilder_;
      /**
       * <pre>
       * Pre-key MUST be signed by the identity key.
       * </pre>
       *
       * <code>.xmtp.message_contents.PublicKey pre_key = 2;</code>
       * @return Whether the preKey field is set.
       */
      public boolean hasPreKey() {
        return preKeyBuilder_ != null || preKey_ != null;
      }
      /**
       * <pre>
       * Pre-key MUST be signed by the identity key.
       * </pre>
       *
       * <code>.xmtp.message_contents.PublicKey pre_key = 2;</code>
       * @return The preKey.
       */
      public xmtp.message_contents.PublicKeyOuterClass.PublicKey getPreKey() {
        if (preKeyBuilder_ == null) {
          return preKey_ == null ? xmtp.message_contents.PublicKeyOuterClass.PublicKey.getDefaultInstance() : preKey_;
        } else {
          return preKeyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Pre-key MUST be signed by the identity key.
       * </pre>
       *
       * <code>.xmtp.message_contents.PublicKey pre_key = 2;</code>
       */
      public Builder setPreKey(xmtp.message_contents.PublicKeyOuterClass.PublicKey value) {
        if (preKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preKey_ = value;
          onChanged();
        } else {
          preKeyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Pre-key MUST be signed by the identity key.
       * </pre>
       *
       * <code>.xmtp.message_contents.PublicKey pre_key = 2;</code>
       */
      public Builder setPreKey(
          xmtp.message_contents.PublicKeyOuterClass.PublicKey.Builder builderForValue) {
        if (preKeyBuilder_ == null) {
          preKey_ = builderForValue.build();
          onChanged();
        } else {
          preKeyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Pre-key MUST be signed by the identity key.
       * </pre>
       *
       * <code>.xmtp.message_contents.PublicKey pre_key = 2;</code>
       */
      public Builder mergePreKey(xmtp.message_contents.PublicKeyOuterClass.PublicKey value) {
        if (preKeyBuilder_ == null) {
          if (preKey_ != null) {
            preKey_ =
              xmtp.message_contents.PublicKeyOuterClass.PublicKey.newBuilder(preKey_).mergeFrom(value).buildPartial();
          } else {
            preKey_ = value;
          }
          onChanged();
        } else {
          preKeyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Pre-key MUST be signed by the identity key.
       * </pre>
       *
       * <code>.xmtp.message_contents.PublicKey pre_key = 2;</code>
       */
      public Builder clearPreKey() {
        if (preKeyBuilder_ == null) {
          preKey_ = null;
          onChanged();
        } else {
          preKey_ = null;
          preKeyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Pre-key MUST be signed by the identity key.
       * </pre>
       *
       * <code>.xmtp.message_contents.PublicKey pre_key = 2;</code>
       */
      public xmtp.message_contents.PublicKeyOuterClass.PublicKey.Builder getPreKeyBuilder() {
        
        onChanged();
        return getPreKeyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Pre-key MUST be signed by the identity key.
       * </pre>
       *
       * <code>.xmtp.message_contents.PublicKey pre_key = 2;</code>
       */
      public xmtp.message_contents.PublicKeyOuterClass.PublicKeyOrBuilder getPreKeyOrBuilder() {
        if (preKeyBuilder_ != null) {
          return preKeyBuilder_.getMessageOrBuilder();
        } else {
          return preKey_ == null ?
              xmtp.message_contents.PublicKeyOuterClass.PublicKey.getDefaultInstance() : preKey_;
        }
      }
      /**
       * <pre>
       * Pre-key MUST be signed by the identity key.
       * </pre>
       *
       * <code>.xmtp.message_contents.PublicKey pre_key = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xmtp.message_contents.PublicKeyOuterClass.PublicKey, xmtp.message_contents.PublicKeyOuterClass.PublicKey.Builder, xmtp.message_contents.PublicKeyOuterClass.PublicKeyOrBuilder> 
          getPreKeyFieldBuilder() {
        if (preKeyBuilder_ == null) {
          preKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xmtp.message_contents.PublicKeyOuterClass.PublicKey, xmtp.message_contents.PublicKeyOuterClass.PublicKey.Builder, xmtp.message_contents.PublicKeyOuterClass.PublicKeyOrBuilder>(
                  getPreKey(),
                  getParentForChildren(),
                  isClean());
          preKey_ = null;
        }
        return preKeyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xmtp.message_contents.PublicKeyBundle)
    }

    // @@protoc_insertion_point(class_scope:xmtp.message_contents.PublicKeyBundle)
    private static final xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle();
    }

    public static xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PublicKeyBundle>
        PARSER = new com.google.protobuf.AbstractParser<PublicKeyBundle>() {
      @java.lang.Override
      public PublicKeyBundle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PublicKeyBundle(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PublicKeyBundle> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PublicKeyBundle> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xmtp.message_contents.PublicKeyOuterClass.PublicKeyBundle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xmtp_message_contents_UnsignedPublicKey_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xmtp_message_contents_UnsignedPublicKey_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xmtp_message_contents_UnsignedPublicKey_Secp256k1Uncompressed_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xmtp_message_contents_UnsignedPublicKey_Secp256k1Uncompressed_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xmtp_message_contents_SignedPublicKey_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xmtp_message_contents_SignedPublicKey_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xmtp_message_contents_SignedPublicKeyBundle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xmtp_message_contents_SignedPublicKeyBundle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xmtp_message_contents_PublicKey_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xmtp_message_contents_PublicKey_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xmtp_message_contents_PublicKey_Secp256k1Uncompressed_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xmtp_message_contents_PublicKey_Secp256k1Uncompressed_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xmtp_message_contents_PublicKeyBundle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xmtp_message_contents_PublicKeyBundle_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!message_contents/public_key.proto\022\025xmt" +
      "p.message_contents\032 message_contents/sig" +
      "nature.proto\"\272\001\n\021UnsignedPublicKey\022\022\n\ncr" +
      "eated_ns\030\001 \001(\004\022`\n\026secp256k1_uncompressed" +
      "\030\003 \001(\0132>.xmtp.message_contents.UnsignedP" +
      "ublicKey.Secp256k1UncompressedH\000\032&\n\025Secp" +
      "256k1Uncompressed\022\r\n\005bytes\030\001 \001(\014B\007\n\005unio" +
      "n\"Y\n\017SignedPublicKey\022\021\n\tkey_bytes\030\001 \001(\014\022" +
      "3\n\tsignature\030\002 \001(\0132 .xmtp.message_conten" +
      "ts.Signature\"\216\001\n\025SignedPublicKeyBundle\022<" +
      "\n\014identity_key\030\001 \001(\0132&.xmtp.message_cont" +
      "ents.SignedPublicKey\0227\n\007pre_key\030\002 \001(\0132&." +
      "xmtp.message_contents.SignedPublicKey\"\361\001" +
      "\n\tPublicKey\022\021\n\ttimestamp\030\001 \001(\004\0228\n\tsignat" +
      "ure\030\002 \001(\0132 .xmtp.message_contents.Signat" +
      "ureH\001\210\001\001\022X\n\026secp256k1_uncompressed\030\003 \001(\013" +
      "26.xmtp.message_contents.PublicKey.Secp2" +
      "56k1UncompressedH\000\032&\n\025Secp256k1Uncompres" +
      "sed\022\r\n\005bytes\030\001 \001(\014B\007\n\005unionB\014\n\n_signatur" +
      "e\"|\n\017PublicKeyBundle\0226\n\014identity_key\030\001 \001" +
      "(\0132 .xmtp.message_contents.PublicKey\0221\n\007" +
      "pre_key\030\002 \001(\0132 .xmtp.message_contents.Pu" +
      "blicKeyB.Z,github.com/xmtp/proto/v3/go/m" +
      "essage_contentsb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          xmtp.message_contents.SignatureOuterClass.getDescriptor(),
        });
    internal_static_xmtp_message_contents_UnsignedPublicKey_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_xmtp_message_contents_UnsignedPublicKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xmtp_message_contents_UnsignedPublicKey_descriptor,
        new java.lang.String[] { "CreatedNs", "Secp256K1Uncompressed", "Union", });
    internal_static_xmtp_message_contents_UnsignedPublicKey_Secp256k1Uncompressed_descriptor =
      internal_static_xmtp_message_contents_UnsignedPublicKey_descriptor.getNestedTypes().get(0);
    internal_static_xmtp_message_contents_UnsignedPublicKey_Secp256k1Uncompressed_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xmtp_message_contents_UnsignedPublicKey_Secp256k1Uncompressed_descriptor,
        new java.lang.String[] { "Bytes", });
    internal_static_xmtp_message_contents_SignedPublicKey_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_xmtp_message_contents_SignedPublicKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xmtp_message_contents_SignedPublicKey_descriptor,
        new java.lang.String[] { "KeyBytes", "Signature", });
    internal_static_xmtp_message_contents_SignedPublicKeyBundle_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_xmtp_message_contents_SignedPublicKeyBundle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xmtp_message_contents_SignedPublicKeyBundle_descriptor,
        new java.lang.String[] { "IdentityKey", "PreKey", });
    internal_static_xmtp_message_contents_PublicKey_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_xmtp_message_contents_PublicKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xmtp_message_contents_PublicKey_descriptor,
        new java.lang.String[] { "Timestamp", "Signature", "Secp256K1Uncompressed", "Union", "Signature", });
    internal_static_xmtp_message_contents_PublicKey_Secp256k1Uncompressed_descriptor =
      internal_static_xmtp_message_contents_PublicKey_descriptor.getNestedTypes().get(0);
    internal_static_xmtp_message_contents_PublicKey_Secp256k1Uncompressed_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xmtp_message_contents_PublicKey_Secp256k1Uncompressed_descriptor,
        new java.lang.String[] { "Bytes", });
    internal_static_xmtp_message_contents_PublicKeyBundle_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_xmtp_message_contents_PublicKeyBundle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xmtp_message_contents_PublicKeyBundle_descriptor,
        new java.lang.String[] { "IdentityKey", "PreKey", });
    xmtp.message_contents.SignatureOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
