// PrivateKey

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.4
// source: message_contents/private_key.proto

package message_contents

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PrivateKey
type PrivateKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are assignable to Union:
	//	*PrivateKey_Secp256K1_
	Union     isPrivateKey_Union `protobuf_oneof:"union"`
	PublicKey *PublicKey         `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *PrivateKey) Reset() {
	*x = PrivateKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_private_key_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateKey) ProtoMessage() {}

func (x *PrivateKey) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_private_key_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateKey.ProtoReflect.Descriptor instead.
func (*PrivateKey) Descriptor() ([]byte, []int) {
	return file_message_contents_private_key_proto_rawDescGZIP(), []int{0}
}

func (x *PrivateKey) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (m *PrivateKey) GetUnion() isPrivateKey_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *PrivateKey) GetSecp256K1() *PrivateKey_Secp256K1 {
	if x, ok := x.GetUnion().(*PrivateKey_Secp256K1_); ok {
		return x.Secp256K1
	}
	return nil
}

func (x *PrivateKey) GetPublicKey() *PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type isPrivateKey_Union interface {
	isPrivateKey_Union()
}

type PrivateKey_Secp256K1_ struct {
	Secp256K1 *PrivateKey_Secp256K1 `protobuf:"bytes,2,opt,name=secp256k1,proto3,oneof"`
}

func (*PrivateKey_Secp256K1_) isPrivateKey_Union() {}

// PrivateKeyBundleV1 wraps the identityKey and the preKeys
// used as an XMTP identity
type PrivateKeyBundleV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityKey *PrivateKey   `protobuf:"bytes,1,opt,name=identity_key,json=identityKey,proto3" json:"identity_key,omitempty"`
	PreKeys     []*PrivateKey `protobuf:"bytes,2,rep,name=pre_keys,json=preKeys,proto3" json:"pre_keys,omitempty"`
}

func (x *PrivateKeyBundleV1) Reset() {
	*x = PrivateKeyBundleV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_private_key_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateKeyBundleV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateKeyBundleV1) ProtoMessage() {}

func (x *PrivateKeyBundleV1) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_private_key_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateKeyBundleV1.ProtoReflect.Descriptor instead.
func (*PrivateKeyBundleV1) Descriptor() ([]byte, []int) {
	return file_message_contents_private_key_proto_rawDescGZIP(), []int{1}
}

func (x *PrivateKeyBundleV1) GetIdentityKey() *PrivateKey {
	if x != nil {
		return x.IdentityKey
	}
	return nil
}

func (x *PrivateKeyBundleV1) GetPreKeys() []*PrivateKey {
	if x != nil {
		return x.PreKeys
	}
	return nil
}

// PrivateKeyBundle should only contain a oneof of PrivateKeyBundle versions
type PrivateKeyBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Version:
	//	*PrivateKeyBundle_V1
	Version isPrivateKeyBundle_Version `protobuf_oneof:"version"`
}

func (x *PrivateKeyBundle) Reset() {
	*x = PrivateKeyBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_private_key_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateKeyBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateKeyBundle) ProtoMessage() {}

func (x *PrivateKeyBundle) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_private_key_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateKeyBundle.ProtoReflect.Descriptor instead.
func (*PrivateKeyBundle) Descriptor() ([]byte, []int) {
	return file_message_contents_private_key_proto_rawDescGZIP(), []int{2}
}

func (m *PrivateKeyBundle) GetVersion() isPrivateKeyBundle_Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (x *PrivateKeyBundle) GetV1() *PrivateKeyBundleV1 {
	if x, ok := x.GetVersion().(*PrivateKeyBundle_V1); ok {
		return x.V1
	}
	return nil
}

type isPrivateKeyBundle_Version interface {
	isPrivateKeyBundle_Version()
}

type PrivateKeyBundle_V1 struct {
	V1 *PrivateKeyBundleV1 `protobuf:"bytes,1,opt,name=v1,proto3,oneof"`
}

func (*PrivateKeyBundle_V1) isPrivateKeyBundle_Version() {}

// Contains an encrypted payload with the Ciphertext
// decrypting to a PrivateKeyBundle
type EncryptedPrivateKeyBundleV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletPreKey []byte      `protobuf:"bytes,1,opt,name=wallet_pre_key,json=walletPreKey,proto3" json:"wallet_pre_key,omitempty"`
	Ciphertext   *Ciphertext `protobuf:"bytes,2,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
}

func (x *EncryptedPrivateKeyBundleV1) Reset() {
	*x = EncryptedPrivateKeyBundleV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_private_key_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptedPrivateKeyBundleV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptedPrivateKeyBundleV1) ProtoMessage() {}

func (x *EncryptedPrivateKeyBundleV1) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_private_key_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptedPrivateKeyBundleV1.ProtoReflect.Descriptor instead.
func (*EncryptedPrivateKeyBundleV1) Descriptor() ([]byte, []int) {
	return file_message_contents_private_key_proto_rawDescGZIP(), []int{3}
}

func (x *EncryptedPrivateKeyBundleV1) GetWalletPreKey() []byte {
	if x != nil {
		return x.WalletPreKey
	}
	return nil
}

func (x *EncryptedPrivateKeyBundleV1) GetCiphertext() *Ciphertext {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

// Contains a oneof of PrivateKeyBundle versions
type EncryptedPrivateKeyBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Version:
	//	*EncryptedPrivateKeyBundle_V1
	Version isEncryptedPrivateKeyBundle_Version `protobuf_oneof:"version"`
}

func (x *EncryptedPrivateKeyBundle) Reset() {
	*x = EncryptedPrivateKeyBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_private_key_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptedPrivateKeyBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptedPrivateKeyBundle) ProtoMessage() {}

func (x *EncryptedPrivateKeyBundle) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_private_key_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptedPrivateKeyBundle.ProtoReflect.Descriptor instead.
func (*EncryptedPrivateKeyBundle) Descriptor() ([]byte, []int) {
	return file_message_contents_private_key_proto_rawDescGZIP(), []int{4}
}

func (m *EncryptedPrivateKeyBundle) GetVersion() isEncryptedPrivateKeyBundle_Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (x *EncryptedPrivateKeyBundle) GetV1() *EncryptedPrivateKeyBundleV1 {
	if x, ok := x.GetVersion().(*EncryptedPrivateKeyBundle_V1); ok {
		return x.V1
	}
	return nil
}

type isEncryptedPrivateKeyBundle_Version interface {
	isEncryptedPrivateKeyBundle_Version()
}

type EncryptedPrivateKeyBundle_V1 struct {
	V1 *EncryptedPrivateKeyBundleV1 `protobuf:"bytes,1,opt,name=v1,proto3,oneof"`
}

func (*EncryptedPrivateKeyBundle_V1) isEncryptedPrivateKeyBundle_Version() {}

// The elliptic curve bytes
type PrivateKey_Secp256K1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bytes []byte `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"` // D big-endian, 32 bytes
}

func (x *PrivateKey_Secp256K1) Reset() {
	*x = PrivateKey_Secp256K1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_contents_private_key_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateKey_Secp256K1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateKey_Secp256K1) ProtoMessage() {}

func (x *PrivateKey_Secp256K1) ProtoReflect() protoreflect.Message {
	mi := &file_message_contents_private_key_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateKey_Secp256K1.ProtoReflect.Descriptor instead.
func (*PrivateKey_Secp256K1) Descriptor() ([]byte, []int) {
	return file_message_contents_private_key_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PrivateKey_Secp256K1) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

var File_message_contents_private_key_proto protoreflect.FileDescriptor

var file_message_contents_private_key_proto_rawDesc = []byte{
	0x0a, 0x22, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x21, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x78, 0x6d, 0x74, 0x70, 0x5f, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe4, 0x01, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x4b, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36, 0x6b, 0x31, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x2e, 0x53, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36, 0x6b,
	0x31, 0x48, 0x00, 0x52, 0x09, 0x73, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36, 0x6b, 0x31, 0x12, 0x3f,
	0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x1a,
	0x21, 0x0a, 0x09, 0x53, 0x65, 0x63, 0x70, 0x32, 0x35, 0x36, 0x6b, 0x31, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x22, 0x98, 0x01, 0x0a, 0x12,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x56, 0x31, 0x12, 0x44, 0x0a, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x0b, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x78, 0x6d, 0x74,
	0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x07, 0x70,
	0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x5a, 0x0a, 0x10, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x3b, 0x0a, 0x02, 0x76, 0x31,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x56,
	0x31, 0x48, 0x00, 0x52, 0x02, 0x76, 0x31, 0x42, 0x09, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x86, 0x01, 0x0a, 0x1b, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x56, 0x31, 0x12, 0x24, 0x0a, 0x0e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x50, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x69, 0x70, 0x68,
	0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x78,
	0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x22, 0x6c, 0x0a, 0x19, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x44, 0x0a, 0x02, 0x76, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x56, 0x31, 0x48, 0x00, 0x52, 0x02, 0x76, 0x31, 0x42, 0x09,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x6d, 0x74, 0x70, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_contents_private_key_proto_rawDescOnce sync.Once
	file_message_contents_private_key_proto_rawDescData = file_message_contents_private_key_proto_rawDesc
)

func file_message_contents_private_key_proto_rawDescGZIP() []byte {
	file_message_contents_private_key_proto_rawDescOnce.Do(func() {
		file_message_contents_private_key_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_contents_private_key_proto_rawDescData)
	})
	return file_message_contents_private_key_proto_rawDescData
}

var file_message_contents_private_key_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_message_contents_private_key_proto_goTypes = []interface{}{
	(*PrivateKey)(nil),                  // 0: xmtp.message_contents.PrivateKey
	(*PrivateKeyBundleV1)(nil),          // 1: xmtp.message_contents.PrivateKeyBundleV1
	(*PrivateKeyBundle)(nil),            // 2: xmtp.message_contents.PrivateKeyBundle
	(*EncryptedPrivateKeyBundleV1)(nil), // 3: xmtp.message_contents.EncryptedPrivateKeyBundleV1
	(*EncryptedPrivateKeyBundle)(nil),   // 4: xmtp.message_contents.EncryptedPrivateKeyBundle
	(*PrivateKey_Secp256K1)(nil),        // 5: xmtp.message_contents.PrivateKey.Secp256k1
	(*PublicKey)(nil),                   // 6: xmtp.message_contents.PublicKey
	(*Ciphertext)(nil),                  // 7: xmtp.message_contents.Ciphertext
}
var file_message_contents_private_key_proto_depIdxs = []int32{
	5, // 0: xmtp.message_contents.PrivateKey.secp256k1:type_name -> xmtp.message_contents.PrivateKey.Secp256k1
	6, // 1: xmtp.message_contents.PrivateKey.public_key:type_name -> xmtp.message_contents.PublicKey
	0, // 2: xmtp.message_contents.PrivateKeyBundleV1.identity_key:type_name -> xmtp.message_contents.PrivateKey
	0, // 3: xmtp.message_contents.PrivateKeyBundleV1.pre_keys:type_name -> xmtp.message_contents.PrivateKey
	1, // 4: xmtp.message_contents.PrivateKeyBundle.v1:type_name -> xmtp.message_contents.PrivateKeyBundleV1
	7, // 5: xmtp.message_contents.EncryptedPrivateKeyBundleV1.ciphertext:type_name -> xmtp.message_contents.Ciphertext
	3, // 6: xmtp.message_contents.EncryptedPrivateKeyBundle.v1:type_name -> xmtp.message_contents.EncryptedPrivateKeyBundleV1
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_message_contents_private_key_proto_init() }
func file_message_contents_private_key_proto_init() {
	if File_message_contents_private_key_proto != nil {
		return
	}
	file_message_contents_public_key_proto_init()
	file_message_contents_xmtp_envelope_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_message_contents_private_key_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivateKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_contents_private_key_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivateKeyBundleV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_contents_private_key_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivateKeyBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_contents_private_key_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptedPrivateKeyBundleV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_contents_private_key_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptedPrivateKeyBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_contents_private_key_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivateKey_Secp256K1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_message_contents_private_key_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PrivateKey_Secp256K1_)(nil),
	}
	file_message_contents_private_key_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*PrivateKeyBundle_V1)(nil),
	}
	file_message_contents_private_key_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*EncryptedPrivateKeyBundle_V1)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_contents_private_key_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_contents_private_key_proto_goTypes,
		DependencyIndexes: file_message_contents_private_key_proto_depIdxs,
		MessageInfos:      file_message_contents_private_key_proto_msgTypes,
	}.Build()
	File_message_contents_private_key_proto = out.File
	file_message_contents_private_key_proto_rawDesc = nil
	file_message_contents_private_key_proto_goTypes = nil
	file_message_contents_private_key_proto_depIdxs = nil
}
