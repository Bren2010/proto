// Message API
syntax = "proto3";
package xmtp.message_api.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "./message_api/v1";

// RPC
service MessageApi {
    // Publish a message to the network
    rpc Publish (PublishRequest) returns (PublishResponse) {
        option (google.api.http) = {
        post: "/message/v1/publish"
        body: "*"
    };
    }
    // Subscribe to a stream of envelopers matching a predicate
    rpc Subscribe (SubscribeRequest) returns (stream Envelope) {
        option (google.api.http) = {
        post: "/message/v1/subscribe"
        body: "*"
    };
    }
    // Query the store for messages
    rpc Query (QueryRequest) returns (QueryResponse) {
        option (google.api.http) = {
        post: "/message/v1/query"
        body: "*"
    };
    }
}

// Envelope encapsulates a message while in transit.
message Envelope {
    string id = 1;
    string content_topic = 2;
    google.protobuf.Timestamp timestamp = 3;
    bytes message = 4;
}

// Publish
message PublishRequest {
    repeated string content_topics = 1;
    bytes message = 2;
}

// Empty message as a response for Publish
message PublishResponse{
}

// Subscribe
message SubscribeRequest {
    repeated string content_topics = 1;
}


// Query
message QueryRequest {
    repeated string content_topics = 1;
    uint32 limit = 2;
    // Sort direction
    enum SortDirection {
        SORT_DIRECTION_UNSPECIFIED = 0;
        SORT_DIRECTION_ASCENDING = 1;
        SORT_DIRECTION_DESCENDING = 2;
    }
    SortDirection sort_direction = 3;
}

// The response, containing envelopes, for a query
message QueryResponse{
    repeated Envelope envelopes = 1;
}
