// Authn protocol
syntax = "proto3";
package xmtp.message_api.v1;

option go_package = "./message_api/v1";

// ----------------------------------------------------------------------------
// These objects are copied from xmtpjs. 
// Differences:
// * PublicKey.signature is made non-optional
// ----------------------------------------------------------------------------

// Signature represents a generalized public key signature,
// defined as a union to support cryptographic algorithm agility.
message Signature {
    message ECDSACompact {
        bytes bytes = 1; // compact representation [ R || S ], 64 bytes
        uint32 recovery = 2; // recovery bit
    }
    oneof union {
        ECDSACompact ecdsa_compact = 1;
    }
}

message Secp256k1Uncompresed {
    // uncompressed point with prefix (0x04) [ P || X || Y ], 65 bytes
    bytes bytes = 1; 
}
// PublicKey represents a generalized public key,
// defined as a union to support cryptographic algorithm agility.
message PublicKey {
    uint64 timestamp = 1;
    Signature signature = 2;  // signature is optional in the xmtp-js version
    oneof union {
        Secp256k1Uncompresed secp256k1_uncompressed = 3;
    }
}

///////////////////////////////////////////////////////////////////////////////

// Token is used by the clients to prove to the node that they are serving a specific wallet.
message Token {
    PublicKey identity_key = 1; // identity key signed by a wallet
    bytes auth_data_bytes = 2; // encoded bytes of AuthData 
    Signature auth_data_signature = 3; // identity key signature of AuthData bytes
}

// AuthData carries the token parameters that are authenticated by the wallet signature.
// It is embedded in the Token structure as bytes so that the bytes don't need to be 
// reconstructed to verify the token signature.
message AuthData {
    string wallet_addr = 1; // address of the wallet
    uint64 timestamp = 2; // 
}

